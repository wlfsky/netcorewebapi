<?xml version="1.0" ?>
<cherrytree>
	<bookmarks list="20"/>
	<node custom_icon_id="0" foreground="" is_bold="False" name="工作" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1524555653.81" ts_lastsave="1529474735.25" unique_id="1">
		<rich_text></rich_text>
		<node custom_icon_id="0" foreground="" is_bold="False" name="2018工作日志" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1524555705.23" ts_lastsave="1530686646.23" unique_id="3">
			<rich_text>
当前事务：
git学习；
禅道学习；
脚本学习（好难）；
完成千机网改版；


历史日志：

20180704
webapi进入测试阶段；


20180703
优化功能界面,iview实验性界面;
调整api功能增加了几个字段;
api功能修正bug;


20180702
webapi,  创单流程配合调整;
webapi,  bug 品牌名字未能显示;


20180629
试写vue的iview,失败;
处理webapi的bug;增加两个操作人方法;


20180628
新增字段显示,支付先后;
测试修改之前功能的bug;

20180627
配件出库-三方订单和维修订单
订单来源平台管理功能;
三方平台名配置读取和匹配商户id


20180626
导出excel增加配件编码和配件名称，大数据量问题；
api根据商户id获取订单来源平台名称；


20180625
测试批量修改(初步ok)；
平台表功能(初步ok)；
导出excel(还未动手)；



20180622
试编写改版功能
平台改下拉；
批量更新价格（批量修改价格底层已经ok，注意修改报错返回时有空数据）；
导出excel增加字段；


20180621
熟悉3.5的功能;
发现了一个漏洞(精确查询订单来源,无法实现,因为来源数据非常不标准)


20180620
熟悉3.5新改版修改后的功能;


20180619
3.5新改版功能审核;


20180618
熟悉3.5新改版功能;


20180615
编写了分部处理器的首个版本；
多线程分部处理；
命名还是不够理想；



20180614
修改界面的bug和问题；
晚上发版后发现一些问题，及时修改了；


20180613
修改备注排序；
修改质保到期时间时更新质保状态；
界面优化；
点击提交备注后锁定提交按钮；

20180612
bug还是,提取用户id之类显示之类,都不算严重;
订单明细分别显示问题还是有,批发订单要单独提取标志


20180611
修改bug,主要是订单明细显示的问题;
很多地方没有一致的判断尊则;

20180608
大部分bug都修改到了;
修改bug;

20180607
请假半天
整理代码,解决界面问题.优化一些功能;

20180606
fix:质保详情页面，新配件为空时，新配件编码要求不显示
fix:售后申请记录页面，待确认的售后记录，点击“确认售后”后，报错
fix:质保查询页面，点击【发起售后】后，报错
fix:在保的质保列表页和详情页按钮名称显示的不一致
fix:质保详情页，添加客服备注时，报错
还有其他好多问题，走时解决了大部分

20180605
完成基本开发，完成本机验证；
发布，开始修改bug；

20180604
售后申请列表测试；修改bug；
售后列表界面：显示memo；
售后列表查询；
售后详细显示；
售后详细修改质保过期时间；
售后详细连接 申请/确认/取消 功能

20180601
售后列表,dao,svc;
售后列表界面；


20180531
开发soa底层功能；
实体等；
分析流程，3个售后和改时间，取全量，详细界面；

20180530
开发，soa底层功能；
3个后台变更售后状态；

20180529
开发程序，很多问题；
修改首个界面；

20180528
修正流程图，疑问，分功能；

20180525
流程图，分解功能；

20180524
熟悉售后改版3.4的内容；
画流程图；


20180523
屏蔽商户id，从header中提取商户id值；
给get方法加入fromuri；
优化了数据检查写法；


20180522
修改api中的问题；
熟悉售后功能业务；


20180521
WEBAPI，补充输入数据检查；
WEBAPI，部分方法名变更后，日志记录中相应的方法名未变，现在修正，保持一致；
修正一个数据相应结果检测对错的问题；
去掉3个重复的命名空间；

20180518
修改APIbug;
解决优化代码;

20180517
编写api代码,优化功能
修改代码

20180516
继续编写api的代码;
优化,安放代码到规定位置;

20180515
编写代码，修改文档
查找数据源

20180514
API接口文档编写


20180511
写api文档；
发现好多问题，表名功能不匹配，字段值不一致，各种功能名称相似混淆
找不到数据

20180510
准备开始webapi开发
熟悉需求和功能，准备写api文档

20180509
熟悉soc服务各项内容;


20180508
[上门/到店]维修增加js检查和c#检查 至少支持一个；
品牌-型号-故障类型-故障项[用户/商家]端显示，修改时同步修改(是否显示)字段；
故障类型-故障项，发布功能，将[用户/商家]端显示字段加入发布；

20180507
千机网改版+商家端/用户端 显示，上门/到店 维修（界面修改功能都完成，还有个发布还没完全弄懂）；

20180504
更进一步vue化；
新任务维修平台改bug；
维修平台另一个bug，发现转到了商家端，周一开会处理这个bug；

20180503
升级编辑和添加框，几乎用vue风格写法，除窗口那个，和其他插件有关无法完全符合vue风格；
数据检查功能补充；
数据显示改进：图片显示；
数据添加修改改进，上传图片；
销售系统改版讨论会；

20180502
了解了自定义颜色开发的内容，发现自己做的和需求的不一致，自己做的只作为熟悉的内容了；
vue完成色彩配置管理功能；好像还差数据检查，后台的有了前台的还没有；

20180429-20180501
过节----；

20180428
修改功能增加erpcode查询，完成。git提交申请合并；
修改色彩功能界面，作出了添加界面。从Angular改换成VUE框架；

20180427
测试改写到业务层的方法；
改bug；
集成到界面；

20180426
测试颜色管理程序代码；
写入业务层，参照原有的方法；

20180425
继续熟悉qjw项目，准备改版；
写了颜色管理程序，顺便熟悉代码；

20180424
准备加入千机网新改版工作，熟悉千机网前后端（QJW.Web/QJW.Manage）；
参加改版会议，和 营销部（可能是这个部门）

20180423
熟悉4个拆分的新项目，都跑起来了；

20180420
安装系统，和vs2017；
编译运行过了，老的整个服务；

20180419
发现内存有问题，更换内存；
重新安装系统，这次无问题；

20180418
新安装的vs还有问题，不知道是系统不稳定还是硬件有问题；

20180417
调了半天还是有问题；
重新安装系统；

20180416
入职培训；
下午领取机器，难用，死机；</rich_text>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="千机网基本信息" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1524559541.32" ts_lastsave="1528982014.87" unique_id="4">
			<rich_text>

QJW.Web 千机网商城
13518128683/w123456

QJW.Manage 千机网管理后台
帐号：pisenadmin    密码：Aa123456

数据库：oracle  tnsname=  psTest   地址 192.168.31.11  帐号密码：数据库:账号：qjwv21   密码: qjw

商家端：</rich_text>
			<rich_text link="webs http://jisham.ngrok.pisen.com.cn/">http://jisham.ngrok.pisen.com.cn/</rich_text>
			<rich_text>
平台端：</rich_text>
			<rich_text link="webs http://jishap.ngrok.pisen.com.cn/">http://jishap.ngrok.pisen.com.cn/</rich_text>
			<rich_text>
微信端：</rich_text>
			<rich_text link="webs http://jishaweb.ngrok.pisen.com.cn/">http://jishaweb.ngrok.pisen.com.cn/</rich_text>
			<rich_text>

数据库信息

1	T_BC_SHOPADDRESS	退换货地址信息

2	T_BS_ADSETTINGDETAILINFO	广告位详细配置表
3	T_BS_ADSETTINGDETAILINFO_BAK	
4	T_BS_ADSETTINGINFO	广告配置表
5	T_BS_BASICSETTINGINFO	基础参数设置
6	T_BS_CODESETTIINGINFO	码表
7	T_BS_CODEVALUE	码值
8	T_BS_EQUIPMENTMANAGER	云货架设备管理
9	T_BS_FRANCHISEE	特许经营人？
10	T_BS_FRANCHISEELOG	特许经营人日志？
11	T_BS_LOGISTICSSETTINGINFO	物流配置表
12	T_BS_SETTLEMENTSETTING	商品结算配置信息表
13	T_BS_SHOPINFORMATION	店铺档案信息表

14	T_CM_ARTICLE	文章内容表
15	T_CM_CMBESIMILAR	文章相似问题
16	T_CM_CMSCATEGORY	文章分类表
17	T_CM_CMSLIKES	文章/问答点赞信息表
18	T_CM_CMSQA	问答信息表
19	T_CM_CMSREPLY	问答回复信息表
20	T_CM_MOBILETOP	手机变身

21	T_ME_COLLECT	收藏\关注商品
22	T_ME_SHOPMEMBER	店铺会员关系表

23	T_MK_FEEDBACK	意见反馈
24	T_MK_FEEDBACKLOG	意见反馈查看日志
25	T_MK_FRIENDLYLINK	友情链接
26	T_MK_HOTWORD	热搜词
27	T_MK_RECOMMEND	推荐商品

28	T_OC_BILLREFUND	账单退款关系表
29	T_OC_ORDERBILL	订单账单明细表
30	T_OC_REFUNDBATCHNO	退款批次号

31	T_OR_BUYERSELLERINFO	用户卖家关系表
32	T_OR_CARTPRODUCTDETAIL	购物车商品明细
33	T_OR_INSURANCELOG	碎屏险日志表
34	T_OR_LOGISTICSINFO	物流表
35	T_OR_SCREENINSURANCE	碎屏险订单
36	T_OR_SCREENPRODUCTIMEI	商品IMEI表
37	T_OR_SHOPPINGCARTDETAIL	购物车明细

38	T_PC_BASEPROPERTY	属性
39	T_PC_BASEPROPERTYGROUP	属性组
40	T_PC_BASEVALUE	属性值
41	T_PC_BRAND	品牌表
42	T_PC_BRAND_YHJ	品牌表
43	T_PC_COLORCONFIG	
44	T_PC_GIFT	赠品
45	T_PC_PRODUCTADDITIONAL	商品发布第三方附加信息表
46	T_PC_PRODUCTBASEINFO	产品信息表
47	T_PC_PRODUCTBASEINFO_YHJ	
48	T_PC_PRODUCTBASESETTING	商品发布第三方店铺配置表
49	T_PC_PRODUCTCATEGORY	产品类目表
50	T_PC_PRODUCTIMAGE	产品基础图片表
51	T_PC_PRODUCTIMAGE_YHJ	产品基础图片表
52	T_PC_PRODUCTMODEL	商品型号
53	T_PC_PRODUCTTYPE	商品类型
54	T_PC_QUERYPARAM	筛选参数
55	T_PC_RBRANDCATEGORY	品牌关联类别
56	T_PC_RBRANDCATEGORY_YHJ	品牌关联类别
57	T_PC_RCATEGORYTYPE	产品类目关联商品类型
58	T_PC_RPRODUCTCAT	产品类目关系表
59	T_PC_SERVICETEMPLATE	售后服务模板
60	T_PC_WAREINFO	商品信息表
61	T_PC_WAREINFOADDITIONAL	商品发布第三方sku附加信息表
62	T_PC_WAREINFO_20170121	
63	T_PC_WAREINFO_YHJ	商品信息表
64	T_PC_WAREPROPERTYBASE	商品属性表
65	T_PC_WAREPROPERTYBASE_YHJ	商品属性表

66	T_PR_COUPON	优惠券表
67	T_PR_COUPONPRODUCT	优惠券指定商品表
68	T_PR_COUPONRECEIVE	优惠券领取记录

69	T_QA_USERFEEDBACK	用户反馈信息

70	T_RR_RETURNAPPLICATION	退换货申请
71	T_RR_RETURNIMAGE	退换货申请图片
72	T_RR_RETURNLOG	退换货申请操作日志

73	T_SS_COMMENT	评论

商家端：</rich_text>
			<rich_text link="webs http://jisham.ngrok.pisen.com.cn/">http://jisham.ngrok.pisen.com.cn/</rich_text>
			<rich_text>
平台端：</rich_text>
			<rich_text link="webs http://jishap.ngrok.pisen.com.cn/">http://jishap.ngrok.pisen.com.cn/</rich_text>
			<rich_text>
微信端：</rich_text>
			<rich_text link="webs http://jishaweb.ngrok.pisen.com.cn/">http://jishaweb.ngrok.pisen.com.cn/</rich_text>
			<rich_text>

==========================================

BSTROUBLE::基础故障
BSTROUBLECATEGORY::基础故障类型

RETROUBLE::维修故障
RETROUBLECATEGORY::维修故障类型

REONLINETROUBLE::线上维修故障

CRUSER::用户表





</rich_text>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="急啥基本信息" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1527155176.03" ts_lastsave="1527559956.68" unique_id="21">
			<rich_text>


INCLAIM   原理赔表 现在 的维修订单表
质保信息来自    理赔配件表    [InClaimParts]

</rich_text>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="工作信息" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1525413111.13" ts_lastsave="1529393260.33" unique_id="7">
			<rich_text>

密码：
</rich_text>
			<rich_text link="webs http://gitlab.pisendev.com/">http://gitlab.pisendev.com/</rich_text>
			<rich_text>
dev-weilai
wl369258

</rich_text>
			<rich_text link="webs http://cd.pisendev.com/">http://cd.pisendev.com/</rich_text>
			<rich_text>
weilai
wl369258

网关：192.168.21.1
内部dns：192.168.24.201

</rich_text>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="工作框架技术" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1526347081.63" ts_lastsave="1526353241.44" unique_id="17">
			<rich_text>

wcf服务配置：
web.config 
ServiceConfig
LibrariesConfig
system.serviceModel 

引用
Pisen.Framework.Service.Proxy;
Wth.Amps.Contract;
Pisen.Service.EC.Core.Base.Contract;</rich_text>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="git 临时文本" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1526541557.31" ts_lastsave="1530146545.91" unique_id="18">
			<rich_text>
20180517

API 添加：查询维修价格，查询API 添加：查询维修价格，查询品牌型号，查询故障分类和项，查询结算信息，代理创建维修单品牌型号，查询故障分类和项，查询结算信息，代理创建维修单</rich_text>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="提交GIT备注规范" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1528873649.18" ts_lastsave="1528873651.2" unique_id="26">
			<rich_text>fix(UI and DB): Bug #123, #3212

judge the user is the longin user
BREAKING CHANGE: 1.修复bug #123, 2.登录验证码新增, 3.delete the old wrong code and insert some more solution
into develop path

Closes  #1, #2


每次提交，Commit message 都包括三个部分：Header，Body 和 Footer。

&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;
// 空一行

&lt;body&gt;
// 空一行

&lt;footer&gt;

其中，Header 是必需的，Body 和 Footer 可以省略。

Header部分只有一行，包括三个字段：type（必需）、scope（可选）和subject（必需）。
（1）type
type用于说明 commit 的类别，只允许使用下面7个标识。
•	feat：新功能（feature）
•	fix：修补bug
•	docs：修改了文档（documentation）
•	style： 格式（不影响代码运行的变动）
•	refactor：重构（即不是新增功能，也不是修改bug的代码变动）
•	perf：性能优化所做的修改
•	test：增加测试
•	chore：构建过程或辅助工具的变动
•	revert：撤销一次提交
如果type为feat和fix，则该 commit 将肯定出现在 Change log 之中。其他情况（docs、chore、style、refactor、test）由你决定，要不要放入 Change log，建议是不要。
</rich_text>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="公司信息" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1528938801.46" ts_lastsave="1528938822.27" unique_id="28">
			<rich_text>


公司：成都品盛软件有限公司
纳税人识别号：9151 0107 3994 2426 94    


</rich_text>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="急啥 平台端 坑集合" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1528982057.79" ts_lastsave="1528982059.46" unique_id="29">
			<rich_text>

界面连接 在线上会自动加前缀，所以必须使用 </rich_text>
			<rich_text background="#ffffb3">@</rich_text>
			<rich_text>Url</rich_text>
			<rich_text foreground="#b4b4b4">.</rich_text>
			<rich_text>Action</rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text foreground="#d69d85">&quot;PlatformConfirmAfterSales&quot;</rich_text>
			<rich_text foreground="#ff80ff">,</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#d69d85">&quot;AfterSale&quot;</rich_text>
			<rich_text foreground="#ff80ff">)</rich_text>
			<rich_text>

</rich_text>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="公司hosts" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1529393163.94" ts_lastsave="1529393166.36" unique_id="31">
			<rich_text>192.168.24.201 bugtracker.pisendev.com
192.168.24.201 cd.pisendev.com
192.168.24.201 svn.pisendev.com
192.168.24.206 web.v3.huiyuanti.com
192.168.24.206 pmc.v3.huiyuanti.com
192.168.24.206 soa.v3.huiyuanti.com
192.168.24.206 file.v3.huiyuanti.com
192.168.24.211 soa.v4.test
192.168.24.211 soa.v4.dev
192.168.27.201 git.pisendev.com
192.168.27.202 gitlab.pisendev.com
192.168.27.203 admin.passport.pisendev.com
192.168.27.206 v4.web.test
192.168.27.206 v4.admin.dev
192.168.27.207 cloudshelf.pisendev.com
192.168.21.127 web.qjw.pisendev.com
192.168.21.127 mall.qjw.pisendev.com
192.168.21.127 api.qjtv2.pisendev.com
192.168.21.127 soa.oc.qjtv2.pisendev.com
192.168.21.127 soa.uc.qjtv2.pisendev.com
192.168.21.127 soa.lc.qjtv2.pisendev.com
192.168.21.127 soa.qs.qjtv2.pisendev.com
192.168.21.127 console.qjtv2.pisendev.com

192.168.31.31  uctest.pisendev.com

192.168.31.32	soa.qjw.pisendev.com
192.168.31.32	soa.qjt.pisendev.com
192.168.31.32	soa.oc.pisendev.com
192.168.31.32	soa.bc.pisendev.com
192.168.31.32	soa.3ceasy.pisendev.com
192.168.31.32	jishatest.soa

192.168.31.32   soa.jisha.pisendev.com
192.168.31.32   soa.jishaUser.pisendev.com
192.168.31.32   soa.jishaMerchant.pisendev.com

192.168.31.31 jishap.ngrok.pisen.com.cn
192.168.31.31 jisham.ngrok.pisen.com.cn
192.168.31.31 jishaweb.ngrok.pisen.com.cn</rich_text>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="急啥改版" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1529474735.25" ts_lastsave="1529474808.88" unique_id="32">
			<rich_text></rich_text>
			<node custom_icon_id="0" foreground="" is_bold="False" name="千机网-bug修改" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1525414180.67" ts_lastsave="1529474816.71" unique_id="8">
				<rich_text>
20180504
问题描述：
1、进入到员工管理
2、选择一个维修师，点击【查看绑定商家】
3、选择一个商家，点击解绑
无法解绑
GetEmployerStorePart.cshtml - MerchantEmployerList.unBind('@(ViewBag.EmploeryId)','@(item.SysNo)');-》
js-MerchantEmployerList.cshtml - MerchantEmployerList.unBind
cs：
MerchantController.cs-UnBindEmployerStore-》
_iMerchantBusiness.UnBindEmployerStore-》
MerchantBusiness.cs-UnBindEmployerStore-》
IMerchantService-GetMerchantEmployerModel
IMemberService-SetMemberNetworkRole--》这里走向商家中心接口

数据：
employerId：2886，storeId：375788465079455744
employerId：2886，storeId：375787893571981312
数据：

| 门店编号 | 门店名称 | 详细地址 | 运营人姓名 | 运营人手机号 |  |
| 375788465079455744 | LT测试买家仓库2 | 四川成都成华区中营广场 | 刘涛 | 15200000001 |
| 375787893571981312 | LT测试买家仓库1 | 四川成都成华区中营广场 | 刘涛 | 15200000001 |

对应两组输入参数：：：：：
employerId：2886，storeId：375788465079455744
BusinessType = nType,  //30 注释中是实际参数
UserSsoId = ssoid,   //375789404406812672
IsBindAuth = false,
NetworkSysNoList = longList   //[375788465079455744]
-----------------
employerId：2886，storeId：375787893571981312
BusinessType = nType,  // 30
UserSsoId = ssoid,  // 375789404406812672
IsBindAuth = false,
NetworkSysNoList = longList  // [375787893571981312]

</rich_text>
			</node>
			<node custom_icon_id="0" foreground="" is_bold="False" name="1.千机网改版-201804-05" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1524559975.04" ts_lastsave="1529474789.51" unique_id="5">
				<rich_text>
改版计划4月23日首次听说

24日参加改版讨论会，和其他部门

改版 研究
5. 优惠券增加维系优惠券。维修优惠券有详情页，用于优惠券的领取。
    qjw.web  area/coupon
    使用服务：CouponService.Instance.QueryCoupon
6. 全站统一使用www.3ceasy.com/*访问。 当前的登录注册是pisen.com.cn
    手机维修连接到pisen.com.cn的
    检查发现一个mp4是pisen的地址，品胜官网连接是pisen地址，机友帮是pisen地址，web.config中有配置地址是pisen地址，其他均是服务等地址。

直接注册功能，未登录时输入手机号和短信验证码。直接登录，或者用基本信息直接注册用户。（注意两种，先验证和后验证）

1. 首页。用户可登录；首页重新设计。
2. 推广首页。在现在的首页基础上做修改。
3. 预约下单增加用户登录功能。
4. 商城首页。商品分类显示数码配件的二级和三级。楼层重新设计。
5. 优惠券增加维系优惠券。维修优惠券有详情页，用于优惠券的领取。
6. 全站统一使用www.3ceasy.com/*访问。 当前的登录注册是pisen.com.cn 
7. 后台：

</rich_text>
				<rich_text justification="left"></rich_text>
				<rich_text>


</rich_text>
				<table char_offset="548" col_max="400" col_min="40">
					<row>
						<cell>优惠券的领取记录导出exlbug</cell>
						<cell>导出的状态为待审核、已审核，改成未使用、已使用。</cell>
					</row>
					<row>
						<cell>优惠券领取记录时间选择</cell>
						<cell>搜索条件的时间选择只保留年月日，不要时和分。领取记录的记录信息保留时，分</cell>
					</row>
					<row>
						<cell>
</cell>
						<cell></cell>
					</row>
					<row>
						<cell>增加颜色自定义文字的编辑功能</cell>
						<cell>修改颜色的自定义值。除颜色之外的其他规格不做修改。管理颜色表T_PC_COLORCONFIG</cell>
					</row>
					<row>
						<cell>不可销售的规格值不显示在前台</cell>
						<cell>https://mall.3c1000.com/Item/352967258308743168</cell>
					</row>
					<row>
						<cell>下架商品不显示在商品列表中</cell>
						<cell></cell>
					</row>
					<row>
						<cell>商品列表增加商品编码查询功能</cell>
						<cell></cell>
					</row>
					<row>
						<cell>点击这里</cell>
						<cell>点击这里</cell>
					</row>
				</table>
			</node>
			<node custom_icon_id="0" foreground="" is_bold="False" name="2.千机网改版3.1 20180507" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1525662968.59" ts_lastsave="1529474778.34" unique_id="9">
				<rich_text>

更新是否显示功能走向：
js
btnBrandSwitch_OnClick
SwitchBrandRecycle
Wth.Amps.Platform.Web.Controllers.RecycleController.SwitchBrandRecycle
_commonBusiness.GetPhoneBrandById 获取后更新
_commonBusiness.UpdatePhoneBrand
</rich_text>
			</node>
			<node custom_icon_id="0" foreground="" is_bold="False" name="3.千机网售后改版-3.4-20180524" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1527144963.2" ts_lastsave="1529474768.52" unique_id="19">
				<rich_text>
质保信息表 是否就是 inclaim 表？ 答案不是：这个表可能和质保有关系，但质保查询的数据是从 理赔配件表[InClaimParts]

需要 质保信息表，售后信息表，操作日志（应该已经存在）

质保信息来自    理赔配件表[InClaimParts]


配件质保表状态：在保 </rich_text>
				<rich_text foreground="#b4b4b4">=</rich_text>
				<rich_text> </rich_text>
				<rich_text foreground="#b5cea8">1</rich_text>
				<rich_text foreground="#ff80ff">,</rich_text>
				<rich_text> 受理中 </rich_text>
				<rich_text foreground="#b4b4b4">=</rich_text>
				<rich_text> </rich_text>
				<rich_text foreground="#b5cea8">2</rich_text>
				<rich_text foreground="#ff80ff">,</rich_text>
				<rich_text> 已售后 </rich_text>
				<rich_text foreground="#b4b4b4">=</rich_text>
				<rich_text> </rich_text>
				<rich_text foreground="#b5cea8">3</rich_text>
				<rich_text foreground="#ff80ff">,</rich_text>
				<rich_text> 已过期 </rich_text>
				<rich_text foreground="#b4b4b4">=</rich_text>
				<rich_text> </rich_text>
				<rich_text foreground="#b5cea8">4</rich_text>
				<rich_text>
售后申请表状态：待确认 </rich_text>
				<rich_text foreground="#b4b4b4">=</rich_text>
				<rich_text> </rich_text>
				<rich_text foreground="#b5cea8">1</rich_text>
				<rich_text foreground="#ff80ff">,</rich_text>
				<rich_text>待维修 </rich_text>
				<rich_text foreground="#b4b4b4">=</rich_text>
				<rich_text> </rich_text>
				<rich_text foreground="#b5cea8">2</rich_text>
				<rich_text foreground="#ff80ff">,</rich_text>
				<rich_text> 已完成 </rich_text>
				<rich_text foreground="#b4b4b4">=</rich_text>
				<rich_text> </rich_text>
				<rich_text foreground="#b5cea8">3</rich_text>
				<rich_text foreground="#ff80ff">,</rich_text>
				<rich_text> 已取消 </rich_text>
				<rich_text foreground="#b4b4b4">=</rich_text>
				<rich_text> </rich_text>
				<rich_text foreground="#b5cea8">4</rich_text>
				<rich_text>

====方法列表：（？待确认）-后台
根据订单号和配件编码获取质保信息详细：（含质保，售后申请，日志？，备注）；
取消售后：（变更 配件质保表-状态【在保/过保】，售后申请表-状态【取消售后】）；
确认售后：（变更 售后申请表-状态【待维修】）；
发起售后（后台发起售后流程）：发起点在“配件质保信息”，依据备件质保信息发起（创建）售后申请，初始状态（待维修），配件质保表相关记录状态（处理中『受理中』）；
更新质保到期时间：（根据配件质保id和新的时间（不超某个限定时间范围），更新配件质保信息的质保到期时间）；

根据“原质保单id”查询售后申请；
根据“新质保单id”查询售后申请；
根据“批次号”查询售后申请；
以上三个功能整合成一个

售后操作日志：添加售后操作日志；
售后操作日志：按照售后id查询；

售后备注：添加备注（添加一条备注）；
售后备注：查询备注（根据售后申请id查询售后）；

连接：订单编号跳转订单详情；

====方法列表：（～不完善）-商家
根据手机号查询质保信息：输入手机号，输出质保列表n条；
根据imei码查询质保信息：输入imei码，输出质保列表n条；
完成售后：输入（售后申请id，新配件编码～），输出（）
取消售后：

====方法列表：-用户
提交申请售后（用户发起售后流程）：发起点在“配件质保信息”，依据备件质保信息发起（创建）售后申请，初始状态（待确认），配件质保表相关记录状态（不改变）；
以用户的手机号查询用户所有质保信息：输入用户手机号，返回质保列表

------------------
后台发起售后：质保状态-在保--》处理中
                         创建售后，且状态-待维修
后台确认售后：质保状态-在保--》处理中
                         售后状态-待确认--》待维修
后台取消售后：质保状态-

                        售后状态-待确认--》已取消
                                       待维修--》已取消
                                       
关于 售后申请数据 有个问题！ 
所有新的 售后申请 质保单id 关联 都应该关联到 “新质保单id-newclaimpartsid” 上而非 原质保单id（claimpartsid） 字段。
只有在质保完成售后 时 新质保id 转移到 原质保id上


bug 备注
售后申请记录页面，待确认的售后记录，点击“确认售后”后，报错  == 登录用户没有 昵称 

</rich_text>
			</node>
			<node custom_icon_id="0" foreground="" is_bold="False" name="千机网售后改版-3.5-20180620" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1529474808.88" ts_lastsave="1530068875.53" unique_id="33">
				<rich_text>
平台端:
1,出货标记(订单表)[IsNeedStock:true表示 用户会去急啥商家那里拿货 false 表示用户已经拿到货了;针对订单,是：就是商家要出配件；否：商家不出配件；</rich_text>
				<rich_text foreground="#d69d85">OcssIsShip</rich_text>
				<rich_text> 好像就是个字段(20180627还不确定)];
2,补差标记(订单表)(其他人做);
3,平台改填写为下拉(EnableList/INORDERSOURCEPLATFORM);
4,增加维修升级标记();
5,批量修改配件价格一次一列([表.字段]</rich_text>
				<rich_text foreground="#af2253cee837">rephoneaccessories</rich_text>
				<rich_text>.thirdplatformfunction;</rich_text>
				<rich_text foreground="#af2253cee837">retrouble</rich_text>
				<rich_text>.partsprice/userfee/platformfee/repairprofit;);
输入参数 a 301，b 221，m 1500
提交测试地址
partsprice
http://localhost:3087/ThirdPlatform/UpdatePhoneAccessoriesPlatformPrice?brandId=221&amp;accessoryId=301&amp;modelid=1500&amp;pricename=partsprice&amp;newprice=2.5
</rich_text>
				<rich_text foreground="#d69d85">platformfee</rich_text>
				<rich_text>
http://localhost:3087/ThirdPlatform/UpdatePhoneAccessoriesPlatformPrice?brandId=221&amp;accessoryId=301&amp;modelid=1500&amp;pricename=</rich_text>
				<rich_text foreground="#d69d85">platformfee</rich_text>
				<rich_text>&amp;newprice=3.5
</rich_text>
				<rich_text foreground="#d69d85">profit</rich_text>
				<rich_text>
http://localhost:3087/ThirdPlatform/UpdatePhoneAccessoriesPlatformPrice?brandId=221&amp;accessoryId=301&amp;modelid=1500&amp;pricename=</rich_text>
				<rich_text foreground="#d69d85">profit</rich_text>
				<rich_text>&amp;newprice=4.5
</rich_text>
				<rich_text foreground="#d69d85">servicefee</rich_text>
				<rich_text>
http://localhost:3087/ThirdPlatform/UpdatePhoneAccessoriesPlatformPrice?brandId=221&amp;accessoryId=301&amp;modelid=1500&amp;pricename=</rich_text>
				<rich_text foreground="#d69d85">servicefee</rich_text>
				<rich_text>&amp;newprice=5.5
查看测试地址
http://localhost:3087/ThirdPlatform/PhoneAccessoriesModelManagementPartialDetail?brandId=221&amp;accessoryId=301&amp;modelid=1500

6,商家流水加入eas编码查询导出(有商家id,无eas编码);
7,导出excel增加配件编码和配件编号(TroubleController.GetRepirOrderData方法[2362]行代码;底层缺少根据ids提取配件信息的数据层方法);


临时任务：webapi 修改 根据配置获取平台商户名
</rich_text>
				<rich_text link="webs http://localhost:58955/repairorder/getplatform?mid=3">http://localhost:58955/repairorder/getplatform?mid=3</rich_text>
				<rich_text>



</rich_text>
			</node>
			<node custom_icon_id="0" foreground="" is_bold="False" name="WEBAPI接口" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1525921006.27" ts_lastsave="1530787253.93" unique_id="15">
				<rich_text>
我的部分

</rich_text>
				<rich_text link="webs http://192.168.31.32/">http://192.168.31.32/</rich_text>
				<rich_text>    访问地址

流程3
获取配件列表？
外码--查询 配件 价格  参考：急啥 配件价格表：RePhoneAccessories，接口：PhoneAccessoriesService.GetPhoneAccessoriesList/GetPhoneAccessoriesByThirdId。注意：是通过配件编号查询该配件的维修价格

GetOnlineTroubleConfig



商品编码--查询 配件 价格  ：RepairService.GetTroubleModel（扫描二维码获得3个信息，外码，商家EAS码，商品EAS码，通过商品的EAS码获取配件维修信息，商品EAS码就是ERPCode，就是产品编码productCode）
创建预约维修订单  QJW.Repair.Merchant.RepairController.RepairOrderCreate  /  MerchantCreateRepairOrder
维修订单升舱  
查看维修订单详细信息  QJW.Repair.Merchant.RepairController.Detail

流程4
账单查询  结算中心？直接查询维修订单？
MerchantDao. GetMerchantAccountStatement
MerchantService. GetMerchantAccountStatement

手机品牌，型号查询，故障类型，故障项
商家信息查询，
商家门店信息查询 
商家维修师查询 

是否回填第三方订单号？

问题：
1，配件价格哪里查询，位置：方法名
2，升舱==创建维修订单？
3，账单查询哪里？位置方法名

测试帐号 13518128683  
101/247/
</rich_text>
			</node>
		</node>
	</node>
	<node custom_icon_id="0" foreground="" is_bold="False" name="技术笔记" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1524555686.7" ts_lastsave="1530695462.96" unique_id="2">
		<rich_text></rich_text>
		<node custom_icon_id="0" foreground="" is_bold="False" name="vue写法集锦" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1525248522.82" ts_lastsave="1530870488.48" unique_id="6">
			<rich_text>------------------------传送当前元素
v-on:click=&quot;func(</rich_text>
			<rich_text foreground="#ffff00000000">$event</rich_text>
			<rich_text>)&quot;
方法中获取当前元素
func:function(</rich_text>
			<rich_text foreground="#ffff00000000">event</rich_text>
			<rich_text>){
    </rich_text>
			<rich_text foreground="#ffff00000000">event.currentTarget</rich_text>
			<rich_text>.......
}

------------------------vue初始化
//模板
&lt;div </rich_text>
			<rich_text foreground="#ffff00000000">id=&quot;colorConfigAppv&quot;</rich_text>
			<rich_text>&gt;
    &lt;h2&gt;管理 &lt;button type=&quot;button&quot; </rich_text>
			<rich_text foreground="#ffff00000000">v-on:click=&quot;addnew&quot;</rich_text>
			<rich_text>（添加事件）&gt;添加&lt;/button&gt; &lt;/h2&gt;
    &lt;div&gt;
        &lt;table id=&quot;v_colorconfig_list_box&quot;&gt;
            &lt;tr&gt;
                &lt;td&gt;编号&lt;/td&gt;
                &lt;td&gt;名&lt;/td&gt;
                &lt;td&gt;代码&lt;/td&gt;
                &lt;td&gt;URL&lt;/td&gt;
                &lt;td&gt;管理&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr </rich_text>
			<rich_text foreground="#ffff00000000">v-for=&quot;i in cc_data.Rows&quot;</rich_text>
			<rich_text> /*循环*/ </rich_text>
			<rich_text foreground="#ffff00000000">v-bind:class=&quot;['alert'/*一直输出这个样式*/, i.IsEnable == 1 ? 'alert-success' : 'alert-warning'/*条件输出上面样式*/]&quot;</rich_text>
			<rich_text>/*依据数据三元样式信息*/&gt;
                &lt;td&gt;</rich_text>
			<rich_text foreground="#ffff00000000">{{i.SysNo}}</rich_text>
			<rich_text>/*数据*/&lt;/td&gt;
                &lt;td&gt;</rich_text>
			<rich_text foreground="#ffff00000000">{{i.ColorName}}</rich_text>
			<rich_text>&lt;/td&gt;
                &lt;td&gt;</rich_text>
			<rich_text foreground="#ffff00000000">{{i.ColorCode}}</rich_text>
			<rich_text>&lt;/td&gt;
                &lt;td&gt;</rich_text>
			<rich_text foreground="#ffff00000000">{{i.ColorUrl}}</rich_text>
			<rich_text>&lt;/td&gt;
                &lt;td&gt;
                    &lt;button type=&quot;button&quot; </rich_text>
			<rich_text foreground="#ffff00000000">v-on:click=&quot;edit(i)&quot;</rich_text>
			<rich_text>/*编辑事件传送数据row*/&gt;编辑&lt;/button&gt;
                    &lt;button type=&quot;button&quot; </rich_text>
			<rich_text foreground="#ffff00000000">v-on:click=&quot;del($event, i)&quot;</rich_text>
			<rich_text>/*删除事件，$event传送this*/&gt;删除&lt;/button&gt;
                &lt;/td&gt;
            &lt;/tr&gt;
        &lt;/table&gt;
    &lt;/div&gt;
&lt;/div&gt;
// vue app 初始化，定义列表控件事件
    var v_cc_app = new Vue({
        </rich_text>
			<rich_text foreground="#ffff00000000">el: '#colorConfigAppv'</rich_text>
			<rich_text>,
        data: {
            show_edit_box:false,
            </rich_text>
			<rich_text foreground="#ffff00000000">cc_data: { PageSize: 20, PageNo: 1, Rows: [{SysNo:0,ColorName:'',ColorCode:'',ColorUrl:'',IsEnable:0}]}//默认数据</rich_text>
			<rich_text>
        },
        beforeCreate: function () {//创建前事件
            reloadColorConfig();//绑定数据
        },
        created: function () {//创建后事件
        },
        methods: {
            edit: function (data) {//编辑按钮事件
                OpenEditWin(data);
            }
        }
    });

---------------------------------vue 样式控制
&lt;div </rich_text>
			<rich_text foreground="#ffff00000000">v-bind:class=&quot;{ active: isActive }&quot;</rich_text>
			<rich_text>&gt;&lt;/div&gt;
表示 isActive(true/false)决定 ‘active’ 这个class样式出现与否
----
下面：根据isActive和hasError 值 在class中加入 active 和 'text-danger' 样式
&lt;div class=&quot;static&quot; </rich_text>
			<rich_text foreground="#ffff00000000">v-bind:class=&quot;{ active: isActive, 'text-danger': hasError }&quot;</rich_text>
			<rich_text>&gt;&lt;/div&gt;
----
下面和上面一致，计算了数据中 </rich_text>
			<rich_text foreground="#ffff00000000">classObject</rich_text>
			<rich_text> 的结果
&lt;div </rich_text>
			<rich_text foreground="#ffff00000000">v-bind:class=&quot;classObject&quot;</rich_text>
			<rich_text>&gt;&lt;/div&gt;
data: { </rich_text>
			<rich_text foreground="#ffff00000000">classObject: { active: true, 'text-danger': false }</rich_text>
			<rich_text> }
----
使用了计算属性，class的结果是 computed.</rich_text>
			<rich_text foreground="#ffff00000000">classObject</rich_text>
			<rich_text>的计算结果；
&lt;div </rich_text>
			<rich_text foreground="#ffff00000000">v-bind:class=&quot;classObject&quot;</rich_text>
			<rich_text>&gt;&lt;/div&gt;
data: {
  isActive: true,
  error: null
},
computed: {
  </rich_text>
			<rich_text foreground="#ffff00000000">classObject</rich_text>
			<rich_text>: function () {
    return {
      active: this.isActive &amp;&amp; !this.error,
      'text-danger': this.error &amp;&amp; this.error.type === 'fatal'
    }
  }
}
----
数组语法，数组中对照数据中的值写入样式
&lt;div v-bind:class=&quot;[activeClass, errorClass]&quot;&gt;&lt;/div&gt;
data: { activeClass: 'active', errorClass: 'text-danger' }
----
数组语法+三元，红色是个三元表达式，前后都可以跟class名字和数据映射的class名字
&lt;div v-bind:class=&quot;[‘classname’, </rich_text>
			<rich_text foreground="#ffff00000000">isActive ? activeClass : ''</rich_text>
			<rich_text>, errorClass]&quot;&gt;&lt;/div&gt;
----
数组语法中加入对象语法
&lt;div v-bind:class=&quot;</rich_text>
			<rich_text foreground="#a0a02020f0f0">[</rich_text>
			<rich_text foreground="#ffff00000000">{ active: isActive }</rich_text>
			<rich_text foreground="#a0a02020f0f0">, errorClass]</rich_text>
			<rich_text>&quot;&gt;&lt;/div&gt;

------------------------------bootstrap复选框代码方式设置选中和不选中，要两个设置
$(&quot;#inputIsEnable&quot;).removeAttr(&quot;checked&quot;);
$(&quot;#inputIsEnable&quot;)[0].checked = false;
判断时用下面方式
$(&quot;#inputEditIsEnable&quot;)[0].checked == true
$(&quot;#inputIsEnable&quot;).attr('checked') == ‘checked’

-----------------------------vue重新载入数据
// 重新载入数据(非纯vue写法，纯vue写法需要注册在monthed中)
    var reloadColorConfig = function () {
        $.get('ColorConfigManage/index', { PageSize: 20, IsEnable: -1, PageNo: 1 }, function (data) {
            </rich_text>
			<rich_text foreground="#ffff00000000">v_cc_app.cc_data = data;</rich_text>
			<rich_text>//注意是用vue对象赋值，可激活刷新，但是赋值array中的某条可能不会激活刷新
        });
    }
---------------------------------vue设置单行数据出发界面刷新
</rich_text>
			<rich_text foreground="#ffff00000000">Vue.set(</rich_text>
			<rich_text>v_cc_app.cc_data.Rows(数据组), i(索引), new_data(新数据));
还有一组类似功能可以引起刷新界面
• push()
• pop()
• shift()
• unshift()
• splice()
• sort()
• reverse()
还有些请参考“全局API”

----------------------------------------vue 01 值绑定 复选框true false转换
&lt;input id=&quot;inputEditIsEnable&quot; type=&quot;checkbox&quot; </rich_text>
			<rich_text foreground="#ffff00000000">v-model=&quot;edit_data.IsEnable&quot;</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ffff00000000">v-bind:true-value=&quot;1&quot; v-bind:false-value=&quot;0&quot;</rich_text>
			<rich_text> /&gt;是否启用

----------------------------------------vue 01 值绑定 显示转换  1-&gt;是/0-&gt;否
{{IsEnable==1?'是':'否'}}

--------------------------------------vue v-show指令直接绑定控件显示和不显示
&lt;div id=&quot;box&quot; </rich_text>
			<rich_text foreground="#ffff00000000">v-show=&quot;is_show_edit_win&quot;</rich_text>
			<rich_text>&gt;...&lt;/div&gt;

---------------------------vue 绑定表单的某个值，还对数据去空格
&lt;input id=&quot;inputColorName&quot; </rich_text>
			<rich_text foreground="#ffff00000000">v-model.trim=&quot;add_data.ColorName&quot;</rich_text>
			<rich_text> /&gt;

--------------------------vue 多个属性绑定一个值
&lt;img </rich_text>
			<rich_text foreground="#ffff00000000">v-bind=&quot;{alt:i.ColorUrl,src:i.ColorUrl,title:i.ColorUrl}&quot;</rich_text>
			<rich_text> /&gt;

========================模板写法
注意点：全局注册（Vue</rich_text>
			<rich_text foreground="#ff80ff">.</rich_text>
			<rich_text>component）和局部注册，要有名字！
全局注册和局部注册要在 var app = new Vue(...)之前；
用模板的话，模板要在注册之后；
</rich_text>
			<rich_text foreground="#808080">&lt;</rich_text>
			<rich_text foreground="#569cd6">script</rich_text>
			<rich_text foreground="#808080">&gt;</rich_text>
			<rich_text foreground="#57a64a">
</rich_text>
			<rich_text>        Vue</rich_text>
			<rich_text foreground="#ff80ff">.</rich_text>
			<rich_text>component</rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text foreground="#d69d85">'button-counter'</rich_text>
			<rich_text foreground="#ff80ff">,</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff80ff">{</rich_text>
			<rich_text>
            template</rich_text>
			<rich_text foreground="#ff80ff">:</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#d69d85">'#button-counter-template'</rich_text>
			<rich_text foreground="#ff80ff">,</rich_text>
			<rich_text>
            data</rich_text>
			<rich_text foreground="#ff80ff">:</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#569cd6">function</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff80ff">()</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff80ff">{</rich_text>
			<rich_text>
                </rich_text>
			<rich_text foreground="#569cd6">return</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff80ff">{</rich_text>
			<rich_text>
                    title</rich_text>
			<rich_text foreground="#ff80ff">:</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#d69d85">&quot;-TITLE-&quot;</rich_text>
			<rich_text foreground="#ff80ff">,</rich_text>
			<rich_text>
                    count</rich_text>
			<rich_text foreground="#ff80ff">:</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#b5cea8">0</rich_text>
			<rich_text>
                </rich_text>
			<rich_text foreground="#ff80ff">}</rich_text>
			<rich_text>
            </rich_text>
			<rich_text foreground="#ff80ff">}</rich_text>
			<rich_text>
        </rich_text>
			<rich_text foreground="#ff80ff">});</rich_text>
			<rich_text>
 
        </rich_text>
			<rich_text foreground="#569cd6">var</rich_text>
			<rich_text> BC </rich_text>
			<rich_text foreground="#b4b4b4">=</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff80ff">{</rich_text>
			<rich_text>
            template</rich_text>
			<rich_text foreground="#ff80ff">:</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#d69d85">'#bc-template'</rich_text>
			<rich_text foreground="#ff80ff">,</rich_text>
			<rich_text>
            data</rich_text>
			<rich_text foreground="#ff80ff">:</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#569cd6">function</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff80ff">()</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff80ff">{</rich_text>
			<rich_text>
                </rich_text>
			<rich_text foreground="#569cd6">return</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff80ff">{</rich_text>
			<rich_text>
                    title</rich_text>
			<rich_text foreground="#ff80ff">:</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#d69d85">&quot;-TITLE-&quot;</rich_text>
			<rich_text foreground="#ff80ff">,</rich_text>
			<rich_text>
                    count</rich_text>
			<rich_text foreground="#ff80ff">:</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#b5cea8">0</rich_text>
			<rich_text>
                </rich_text>
			<rich_text foreground="#ff80ff">}</rich_text>
			<rich_text>
            </rich_text>
			<rich_text foreground="#ff80ff">}</rich_text>
			<rich_text>
        </rich_text>
			<rich_text foreground="#ff80ff">};</rich_text>
			<rich_text>
    </rich_text>
			<rich_text foreground="#808080">&lt;/</rich_text>
			<rich_text foreground="#569cd6">script</rich_text>
			<rich_text foreground="#808080">&gt;</rich_text>
			<rich_text>
    </rich_text>
			<rich_text foreground="#808080">&lt;</rich_text>
			<rich_text foreground="#569cd6">script</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#9cdcfe">type</rich_text>
			<rich_text foreground="#b4b4b4">=</rich_text>
			<rich_text foreground="#c8c8c8">&quot;text/x-template&quot;</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#9cdcfe">id</rich_text>
			<rich_text foreground="#b4b4b4">=</rich_text>
			<rich_text foreground="#c8c8c8">&quot;button-counter-template&quot;</rich_text>
			<rich_text foreground="#808080">&gt;</rich_text>
			<rich_text>
        </rich_text>
			<rich_text foreground="#808080">&lt;</rich_text>
			<rich_text foreground="#569cd6">button</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#9cdcfe">v-on:click</rich_text>
			<rich_text foreground="#b4b4b4">=</rich_text>
			<rich_text foreground="#c8c8c8">&quot;count++&quot;</rich_text>
			<rich_text foreground="#808080">&gt;</rich_text>
			<rich_text>You clicked me </rich_text>
			<rich_text weight="heavy">{{</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff00ff">count</rich_text>
			<rich_text> </rich_text>
			<rich_text weight="heavy">}}</rich_text>
			<rich_text> times.【</rich_text>
			<rich_text weight="heavy">{{</rich_text>
			<rich_text foreground="#ff00ff">title</rich_text>
			<rich_text weight="heavy">}}</rich_text>
			<rich_text>】1111</rich_text>
			<rich_text foreground="#808080">&lt;/</rich_text>
			<rich_text foreground="#569cd6">button</rich_text>
			<rich_text foreground="#808080">&gt;</rich_text>
			<rich_text>
    </rich_text>
			<rich_text foreground="#808080">&lt;/</rich_text>
			<rich_text foreground="#569cd6">script</rich_text>
			<rich_text foreground="#808080">&gt;</rich_text>
			<rich_text>
    </rich_text>
			<rich_text foreground="#808080">&lt;</rich_text>
			<rich_text foreground="#569cd6">script</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#9cdcfe">type</rich_text>
			<rich_text foreground="#b4b4b4">=</rich_text>
			<rich_text foreground="#c8c8c8">&quot;text/x-template&quot;</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#9cdcfe">id</rich_text>
			<rich_text foreground="#b4b4b4">=</rich_text>
			<rich_text foreground="#c8c8c8">&quot;bc-template&quot;</rich_text>
			<rich_text foreground="#808080">&gt;</rich_text>
			<rich_text>
        </rich_text>
			<rich_text foreground="#808080">&lt;</rich_text>
			<rich_text foreground="#569cd6">button</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#9cdcfe">v-on:click</rich_text>
			<rich_text foreground="#b4b4b4">=</rich_text>
			<rich_text foreground="#c8c8c8">&quot;count++&quot;</rich_text>
			<rich_text foreground="#808080">&gt;</rich_text>
			<rich_text>You clicked me </rich_text>
			<rich_text weight="heavy">{{</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff00ff">count</rich_text>
			<rich_text> </rich_text>
			<rich_text weight="heavy">}}</rich_text>
			<rich_text> times.【</rich_text>
			<rich_text weight="heavy">{{</rich_text>
			<rich_text foreground="#ff00ff">title</rich_text>
			<rich_text weight="heavy">}}</rich_text>
			<rich_text>】2222</rich_text>
			<rich_text foreground="#808080">&lt;/</rich_text>
			<rich_text foreground="#569cd6">button</rich_text>
			<rich_text foreground="#808080">&gt;</rich_text>
			<rich_text>
    </rich_text>
			<rich_text foreground="#808080">&lt;/</rich_text>
			<rich_text foreground="#569cd6">script</rich_text>
			<rich_text foreground="#808080">&gt;</rich_text>
			<rich_text>

</rich_text>
			<node custom_icon_id="0" foreground="" is_bold="False" name="vue 3种模板写法 最实用" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1530751307.62" ts_lastsave="1530751416.96" unique_id="45">
				<rich_text>
</rich_text>
				<rich_text scale="h2">x-template</rich_text>
				<rich_text>
使用此方法，你的模板被定义在例如 </rich_text>
				<rich_text family="monospace">index.html</rich_text>
				<rich_text> 文件中的 </rich_text>
				<rich_text family="monospace">script</rich_text>
				<rich_text> 标签里。此 </rich_text>
				<rich_text family="monospace">script</rich_text>
				<rich_text> 标签使用 </rich_text>
				<rich_text family="monospace">text/x-template</rich_text>
				<rich_text> 标记，并由组件定义的 </rich_text>
				<rich_text family="monospace">id</rich_text>
				<rich_text> 引用。
我喜欢这种方法，它允许你使用适当的 HTML 标记编写你的 HTML，不过不好的一面是，它把模板和组件定义的其它部分分离开来。
</rich_text>
				<rich_text family="monospace">Vue.component('my-checkbox', {
    template: '#checkbox-template',
    data() {
        return {
            checked: false,
            title: 'Check me'
        }
    },
    methods: {
        check() {
            this.checked = !this.checked;
        }
    }
});

&lt;script type=&quot;text/x-template&quot; id=&quot;checkbox-template&quot;&gt;
    &lt;div class=&quot;checkbox-wrapper&quot; @click=&quot;check&quot;&gt;
        &lt;div :class=&quot;{ checkbox: true, checked: checked }&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;title&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/script&gt;
</rich_text>
				<rich_text>
</rich_text>
				<rich_text scale="h2">内联模板</rich_text>
				<rich_text>
通过在组件中添加 </rich_text>
				<rich_text family="monospace">inline-template</rich_text>
				<rich_text> 属性，你可以向 Vue 指示内部内容是其模板，而不是将其视为分布式内容（参考 </rich_text>
				<rich_text family="monospace" link="webs https://cn.vuejs.org/v2/guide/components.html#%E4%BD%BF%E7%94%A8-Slot-%E5%88%86%E5%8F%91%E5%86%85%E5%AE%B9">slot</rich_text>
				<rich_text> 。
它与 x-templates 具有相同的缺点，不过一个优点是，内容在 HTML 模板的正确位置，因此可以在页面加载时呈现，而不是等到 JavaScript 运行。
</rich_text>
				<rich_text family="monospace">Vue.component('my-checkbox', {
    data() {
        return {
            checked: false,
            title: 'Check me'
        }
    },
    methods: {
        check() {
            this.checked = !this.checked;
        }
    }
});

&lt;my-checkbox inline-template&gt;
    &lt;div class=&quot;checkbox-wrapper&quot; @click=&quot;check&quot;&gt;
        &lt;div :class=&quot;{ checkbox: true, checked: checked }&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;title&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/my-checkbox&gt;</rich_text>
				<rich_text>


</rich_text>
				<rich_text scale="h2">单文件组件</rich_text>
				<rich_text>
只要你把构建工具设置的很舒服，单文件组件就是模板选项中的王者。它允许你写 HTML 标签定义组件，并且将所有组件定义保留在一个文件中。
尽管它也有一些劣势：需要预编译，某些 IDE 不支持 </rich_text>
				<rich_text family="monospace">.vue</rich_text>
				<rich_text> 文件的语法高亮，不过其地位依然难以被撼动。
</rich_text>
				<rich_text family="monospace">&lt;template&gt;
    &lt;div class=&quot;checkbox-wrapper&quot; @click=&quot;check&quot;&gt;
        &lt;div :class=&quot;{ checkbox: true, checked: checked }&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;title&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
&lt;/template&gt;
&lt;script&gt;
    export default {
        data() {
            return {
                checked: false,
                title: 'Check me'
            }
        },
        methods: {
            check() {
                this.checked = !this.checked;
            }
        }
    }
&lt;/script&gt;
</rich_text>
				<rich_text>你还可以通过引入 pug 之类的预处理器，来获得模板定义的更多可能性。


</rich_text>
				<rich_text scale="h2">使用template标签</rich_text>
				<rich_text>
</rich_text>
				<rich_text family="monospace">&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset=&quot;UTF-8&quot;&gt;
        &lt;title&gt;&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;div id=&quot;app&quot;&gt;
            &lt;my-component&gt;&lt;/my-component&gt;
        &lt;/div&gt;

        &lt;template id=&quot;myComponent&quot;&gt;
            &lt;div&gt;This is a component!&lt;/div&gt;
        &lt;/template&gt;
    &lt;/body&gt;
    &lt;script src=&quot;js/vue.js&quot;&gt;&lt;/script&gt;
    &lt;script&gt;

        Vue.component('my-component',{
            template: '#myComponent'
        })

        new Vue({
            el: '#app'
        })</rich_text>
			</node>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="英语" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1525739641.33" ts_lastsave="1525739642.81" unique_id="10">
			<rich_text>It's a long journey. </rich_text>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="管理" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1526264875.79" ts_lastsave="1529579803.31" unique_id="16">
			<rich_text>
分层次开发合作模型

流程模型
共同 （词汇）定义
产品描述业务，无二义性，流程前后，内外，全局没有冲突；
开发转化业务，具有抽象性，归类同类型业务处理点；

必须定死层层交互结构和处理方式。以及统一埋设日志
表示层
业务层
数据层（一般数据层，视图数据层，事务数据层，3层平行）

团队成员，必须有“共识记忆”，“共同记忆”；
任务分配明确，有层次，且组员间相互明确；
避免重复开发，或者功能重叠；

公共方法：全局/全抽象，解决方案级别公共方法，项目级别公共方法，方法内部级别

统一文件编码utf-8

定制 wcf 或者 webapi 统一交换数据标准
规定 数据库，接口（wcf/webapi）交换，业务，视图的实体模型存放位置和命名规则。
统一数据实体间转换的方法方式

实体扩展抽象业务
</rich_text>
			<rich_text foreground="#608b4e">双刃剑另一面：同一个数据的两个实体 就要定义两次。</rich_text>
			<rich_text>
</rich_text>
			<rich_text foreground="#608b4e">但是总体来说还是大大降低了具体业务暴露的数量</rich_text>
			<rich_text>



</rich_text>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="命令行汇总" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1525739873.56" ts_lastsave="1528188379.17" unique_id="11">
			<rich_text>CURL 命令
用代理访问https地址
./curl.exe -x 115.218.223.39:9000 </rich_text>
			<rich_text link="webs https://download.sublimetext.com/Sub">https://download.sublimetext.com/Sub</rich_text>
			<rich_text>
lime%20Text%20Build%203170%20x64.zip -O f:\download\sublimetext.zip --progress


&amp; [...] command1 &amp; command2 用来分隔一个命令行中的多个命令。Cmd.exe 运行第一个命令，然后运行第二个命令。 
&amp;&amp; [...] command1 &amp;&amp; command2 只有在符号 &amp;&amp; 前面的命令成功时，才用于运行该符号后面的命令。Cmd.exe 运行第一个命令，然后只有在第一个命令运行成功时才运行第二个命令。 
|| [...] command1 || command2 只有在符号 || 前面的命令失败时，才用于运行符号 || 后面的命令。Cmd.exe 运行第一个命令，然后只有在第一个命令未能运行成功（接收到大于零的错误代码）时才运行第二个命令。 

git.exe pull --progress -v --no-rebase &quot;origin&quot; develop


热点：
netsh wlan set hostednetwork mode=allow ssid=bigjoe key=wl258369</rich_text>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="powershell" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1525768158.14" ts_lastsave="1527235328.79" unique_id="12">
			<rich_text>
============= 比较运算
Powershell 中的比较运算符
-eq ：等于
-ne ：不等于
-gt ：大于
-ge ：大于等于
-lt ：小于
-le ：小于等于
-contains ：包含
-notcontains :不包含
求反
求反运算符为-not     ” ! “ 也支持求反。
布尔运算
-and ：和
-or ：或
-xor ：异或
-not ：逆

=============删除列出的指定文件,利用了管道
&gt; </rich_text>
			<rich_text foreground="#cbaf77fcffff">ls -Name &quot;*.jpg&quot; | Remove-Item -Path {$_}</rich_text>
			<rich_text>
------列出最后修改时间在 nn 和 mm之间的的文件，有递归
&gt; dir -s  D:\  | ?{$_.lastwritetime -gt '2018-05-16 17:00:00' -and $_.lastwritetime -lt '2018-05-17 00:00:00'}
------列出最后创建时间在 nn 和 mm之间的的文件，有递归
&gt; ls -path F:\ -R | ?{$_.createtime -gt '2018-05-16 17:00:00' -and $_.createtime -lt '2018-05-17 00:00:00'}
=============时间：
日期和时间
1、获取系统时间   
    Get-Date
    Get-Date -displayhint time
    Get-Date -displayhint date
    也可以把Get-Date赋给变量：
    $A = Get-Date 5/1/2012
    $B = Get-Date &quot;5/1/2012 8:00 AM&quot; # 指定值初始化时间
    Get-Date还包括一些方法：
      AddSeconds，如Get-Date.AddSeconds(10)
      AddMinutes #添加分钟
      AddHours #添加小时
      AddDays #添加天
      AddMonths #添加月
      AddYears #添加年
2、设置系统时间
    Set-Date -date &quot;11/21/2012&quot;
    Set-Date -date &quot;11/21/2012 8:30 AM&quot;
    Set-Date -date &quot;11/21/2012 14:25&quot;
    Set-Date (Get-Date).AddDays(2)
    Set-Date (Get-Date).AddHours(-1)
    Set-Date -adjust 1:30:0 将系统时间向前调1个小时
3、时间运算
    New-Timespan
    如下：
    New-Timespan $(Get-Date) $(Get-Date -month 12 -day 31 -year -hour 22 -minute 20 2012)
    将返回两个日期相差的天数、小时数、分钟数、秒数
4、时间格式化
    Get-Date -Format ‘yyyyMMddHHmmssffff’
    yyyy    年
    M    月
    d    日
    h    小时（12小时制）
    H    小时（24小时制）
    m    分钟
    s    秒
    f    秒以下毫秒


==========执行输出到文件
方法1：
Start-Transcript  和  Stop-Transcript
ps&gt; Start-Transcript ‘D:\log.txt’ -Append -Force

==========输出重定向
‘&gt;’为覆盖                ’&gt;&gt;’追加
&gt; ls &gt; log.txt
&gt; ls &gt;&gt; log.txt

=============命令管道
 “ | ” 符号 将执行结果管道到下一个命令
&gt; ls | sort -Descending Name | Format-Table Name,Mode

=============输出循环转换成值的内容，而非数据类型
查找dll文件排序，选择性显示（Name）
$file_list = ls F:\ -Name &quot;*.dll&quot; | sort -Descending Name | Format-Table Name
接下来如果循环此数组输出每项会输出 其对象类型名 而非其实际值。如下改写可输出其值
$file_list = ls F:\ -Name &quot;*.dll&quot; | sort -Descending Name | Format-Table Name </rich_text>
			<rich_text foreground="#c4338a4ee863">| ForEach-Object { $_ | Out-String }</rich_text>
			<rich_text>
注意后面，循环每个obj $_ 送入 管道 | 再 Out-String
也可以：
foreach($i in $dll_list){
    $x = $i | Out-String #每个单独 out-string
    #...
    }
out-string输出时会带上一个 换行（`r`n），用：</rich_text>
			<rich_text foreground="#c4338a4ee863">$x -replace &quot;`n&quot;, &quot;&quot; -replace &quot;`r&quot;, &quot;&quot;</rich_text>
			<rich_text> 替换掉(大坑，不只有`n) 
 

=============调用.Net系统的方法
====调用类的静态方法 
用中括号把类的名称括起来，然后输入两个冒号，然后再输入方法名，最后是方法的参数。语法如下：
</rich_text>
			<rich_text foreground="#a0a02020f0f0">[类名]::方法名(参数列表)：&gt; [System.Diagnostics.Process]::GetProcessById(0)</rich_text>
			<rich_text>
====访问类的静态属性 
要访问.NET类的静态属性，可以使用中括号把类的名称括起来，然后输入两个冒号，然后再输入属性名。语法如下：
</rich_text>
			<rich_text foreground="#a0a02020f0f0">[类名]::属性名：&gt; [System.DateTime]::Now</rich_text>
			<rich_text>
====调用对象的方法
在对象变量之后使用点（.）作为成员变量符，然后加上方法名，和方法参数即可。语法如下：
$对象变量.方法(参数列表)：
$process = Get-Process notepad
$process.WaitForExit()
====访问对象的属性
在对象变量之后使用点（.）作为成员变量符，然后加上属性名即可。语法如下：
$对象变量.属性名：
$a=1,2,3
$a.count
====引用dll，并初始化实例
1. </rich_text>
			<rich_text foreground="#c4338a4ee863">[void][reflection.assembly]::LoadFile(&quot;G:/Math2.dll&quot;) </rich_text>
			<rich_text>#导入某个dll
    </rich_text>
			<rich_text foreground="#c68b74cbf9a3">Add-Type -AssemblyName mscorlib </rich_text>
			<rich_text>#导入核心模块</rich_text>
			<rich_text foreground="#c68b74cbf9a3">
    Add-Type -AssemblyName System.Linq</rich_text>
			<rich_text> #导入System.Linq
    </rich_text>
			<rich_text foreground="#c4338a4ee863">Add-Type –Path “D:\PowerShellDemo\PowerShellDemo.dll” #这也可导入dll</rich_text>
			<rich_text>
    </rich_text>
			<rich_text foreground="#c4338a4ee863">New-Object 'System.Collections.Generic.Dictionary[[string],[string]]' #创建泛型</rich_text>
			<rich_text>
    </rich_text>
			<rich_text foreground="#c4338a4ee863">New-Object 'System.Collections.Generic.Dictionary[string,string]' #创建泛型</rich_text>
			<rich_text>
4. </rich_text>
			<rich_text foreground="#c4338a4ee863">[System.Math]::CompareI(10,2)  #调用静态</rich_text>
			<rich_text>
5. </rich_text>
			<rich_text foreground="#c4338a4ee863">$a=New-Object Math.Methods  #创建新对象</rich_text>
			<rich_text>
6. </rich_text>
			<rich_text foreground="#c4338a4ee863">$a.CompareII(2,3)  #调用对象方法</rich_text>
			<rich_text>
    </rich_text>
			<rich_text foreground="#9cdcfe">[System.String]</rich_text>
			<rich_text foreground="#d4d4d4">::Format</rich_text>
			<rich_text foreground="#569cd6">(</rich_text>
			<rich_text foreground="#ce9178">&quot;public {0} {1} {{get; set;}}&quot;</rich_text>
			<rich_text foreground="#d4d4d4">, </rich_text>
			<rich_text foreground="#569cd6">$</rich_text>
			<rich_text foreground="#9cdcfe">type_name</rich_text>
			<rich_text foreground="#d4d4d4">, </rich_text>
			<rich_text foreground="#569cd6">$</rich_text>
			<rich_text foreground="#9cdcfe">i</rich_text>
			<rich_text foreground="#dcdcaa">.Name</rich_text>
			<rich_text foreground="#569cd6">)</rich_text>
			<rich_text> # 用.net函数

=========================================技巧：


====不输出如下错误。执行正确输出字符串会被powershell获取打印并报下面类似错误
+ CategoryInfo          : NotSpecified: (fatal: ................... :String) [], RemoteException
+ FullyQualifiedErrorId : NativeCommandError
用如下方法
git.exe --% pull --progress -v --no-rebase &quot;origin&quot; </rich_text>
			<rich_text foreground="#a0a02020f0f0">2&gt;&amp;1 | % { $_.ToString() }</rich_text>
			<rich_text>


成品：
# git自动pull 文档

$path_array = &quot;F:\vsp\QJW.Document&quot;,&quot;F:\vsp\AMPS.Documents&quot;

$path_array2 = ,&quot;F:\vsp\QJW.Repair.Soa&quot;,&quot;F:\vsp\QJW.Manage&quot;,
&quot;F:\vsp\QJW.Repair.Merchant&quot;,
&quot;F:\vsp\QJW.Repair.Platform&quot;,
&quot;F:\vsp\QJW.Repair.User&quot;,
&quot;F:\vsp\QJW.Web&quot;

$OFS = &quot;`r`n&quot; #定义换行符
$log_file_path = &quot;F:\vsp\shell_script\git_auto_pull_log\&quot; #定义日志文件路径
$log_date = Get-Date -Format 'yyyyMMddHHmm' #日志文件名时间部分，格式化
$log_file = &quot;$($log_file_path)log_$log_date.log&quot; #定义日志文件路径和名字
foreach($p in $path_array){
    $now = Get-Date -Format 'yyyyMMddHHmmss'
    cd $p
    $info = &quot;==== [$now]:启动 GIT PULL - [$p] ====&quot;
    echo $info | Out-File -Append $log_file -Encoding utf8
    git.exe pull --progress -v --no-rebase &quot;origin&quot; 2&gt;&amp;1 | % { $_.ToString() } | Out-File -Append $log_file -Encoding utf8
    echo $OFS | Out-File -Append $log_file -Encoding utf8
}







</rich_text>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="go" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1529579797.56" ts_lastsave="1529579800.94" unique_id="37">
			<rich_text></rich_text>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="android" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1527151931.06" ts_lastsave="1527559919.27" unique_id="20">
			<rich_text>
==============adb 入门
adb devices # 命令，查看当前电脑正在连接调试的手机设备
adb -s [设备编号] install [apk的路径]  # 给设备号安装apk
adb uninstall [-k] [包名] # 删除apk/包名.   包名参考(pm list packages) -k 保留缓存和数据
adb push [test.apk] [/mnt/sdcard/test.apk] # 拷贝文件到手机指定目录名字
adb pull [/mnt/sdcard/test.apk] [test.apk] # 拷贝文件出来（保存路径可以写绝对路径，也可以直接写文件名字，保存到执行终端的当前目录下）
------------------
adb reboot # 重启
adb get-serialno # 获取序列号
------root权限
adb root # 以root进入设备
adb shell + su  # 进入shell 再执行su 进入root +号=回车
adbd Insecure # 如果决绝进入权限 试试 安装 adbd Insecure（不是命令）
adb unroot # 退出root权限
------wifi连接手机
adb tcpip 5555 # 在5555端口进行tcpip监听
adb connect &lt;device-ip-address&gt; # 连接在局域网中wifi连接的设备
adb disconnect &lt;device-ip-address&gt; # 断开无线连接
------------------------
查看应用列表
adb shell pm list packages [-f] [-d] [-e] [-s] [-3] [-i] [-u] [--user USER_ID] [FILTER]
参数 	显示列表
无 	所有应用
-f 	显示应用关联的 apk 文件
-d 	只显示 disabled 的应用
-e 	只显示 enabled 的应用
-s 	只显示系统应用
-3 	只显示第三方应用
-i 	显示应用的 installer
-u 	包含已卸载应用
&lt;FILTER&gt; 	包名包含 &lt;FILTER&gt; 字符串
adb shell pm list packages # 列出手机装的所有app的包名
adb shell pm list packages -s # 列出系统应用的所有包名
adb shell pm list packages -3 # 列出除了系统应用的第三方应用包名
adb shell pm list packages | grep qq # 支持 grep 来过滤
adb shell pm clear &lt;packagename&gt; # 清除应用数据与缓存
adb shell am start -n com.stormzhang.demo/.ui.SplashActivity # 启动应用
adb shell am force-stop &lt;packagename&gt; # 强制停止应用
---------
模拟按键输入
adb shell input keyevent &lt;keycode&gt;
3:HOME键,4:返回键,5:打开拨号应用,6:挂断电话,24:增加音量,25:降低音量,26:电源键,27:拍照（需要在相机应用里）,64:打开浏览器,82:菜单键,85:播放/暂停,86:停止播放,87:播放下一首,88:播放上一首,122:移动光标到行首或列表顶部,123:移动光标到行末或列表底部,126:恢复播放,127:暂停播放,164:静音,176:打开系统设置,187:切换应用,207:打开联系人,208:打开日历,209:打开音乐,210:打开计算器,220:降低屏幕亮度,221:提高屏幕亮度,223:系统休眠,224:点亮屏幕,231:打开语音助手,276:如果没有wakelock则让系统休眠,
adb shell input swipe 300 1000 300 500 # 向上滑动手势：起始x，y  结束x，y
adb shell input text hello # 输入文本
---------
adb shell  cat /sys/class/net/wlan0/address # 获取 MAC 地址
adb shell getprop ro.product.model # 查看设备型号
adb shell getprop ro.build.version.release # 查看 Android 系统版本
adb shell wm size # 查看屏幕分辨率
adb shell wm density # 查看屏幕密度
adb shell dumpsys battery # 查看电池情况
adb shell dumpsys window displays # 显示屏参数
adb shell settings get secure android_id # 获取android ID
adb shell dumpsys iphonesubinfo # 提取emei 编码，4.4一下使用
adb shell + su + service call iphonesubinfo 1 # 4.4以上使用，要root权 +号=回车
adb shell getprop ro.build.version.release # Android 系统版本
adb shell cat /proc/cpuinfo # 查看cpu信息
adb shell cat /system/build.prop # 更多硬件信息
---------日志
adb logcat # 查看日志
V:Verbose（最低，输出得最多）， D:Debug（调试信息）， I:Info（一般信息）， W:Warning（警告信息）， E:Error（错误信息）， F:Fatal（严重致命信息）， S:Silent（最高，啥也不输出），
adb logcat *:W # 按以上级别显示日志
adb logcat ActivityManager:I MyApp:D *:S  # 输出 tag ActivityManager 的 Info 以上级别日志，和 tag MyApp 的 Debug 以上级别日志，及其它 tag 的 Silent 级别日志（即屏蔽其它 tag 日志）
adb logcat -v &lt;format&gt;  # 日志格式 brief/process/tag/raw/time/threadtime/long 详细请参考其他文档
adb logcat -c # 清空日志
adb shell dmesg # 内核日志


adb shell screencap -p /sdcard/sc.png # 截图
adb shell screenrecord /sdcard/filename.mp4  # 录制屏幕
    --size WIDTHxHEIGHT 	视频的尺寸，比如 1280x720，默认是屏幕分辨率。
    --bit-rate RATE 	视频的比特率，默认是 4Mbps。
    --time-limit TIME 	录制时长，单位秒。
    --verbose 	输出更多信息。


adb shell # 进入adb shell环境
shell&gt; ls # 列出文件
shell&gt; exit # 退出 shell环境

adb shell + su + cat /data/misc/wifi/*.conf  # + 表示回车 查看连接过的 WiFi 密码
adb shell + su + date -s 20160823.131500  # 设置设备时间，要root

adb reboot recovery
adb reboot
adb reboot bootloader

adb shell ps
adb shell top
    cat 	显示文件内容
    cd 	切换目录
    chmod 	改变文件的存取模式/访问权限
    df 	查看磁盘空间使用情况
    grep 	过滤输出
    kill 	杀死指定 PID 的进程
    ls 	列举目录内容
    mount 	挂载目录的查看和管理
    mv 	移动或重命名文件
    ps 	查看正在运行的进程
    rm 	删除文件
    top 	查看进程的资源占用情况
</rich_text>
			<node custom_icon_id="0" foreground="" is_bold="False" name="错误处理" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1527559919.39" ts_lastsave="1527560507.01" unique_id="24">
				<rich_text>
Android Studio 3.x
unexpected element &lt;service&gt; found in &lt;manifest&gt;    
https://stackoverflow.com/questions/46948498/android-studio-3-0-manifest-error-unknown-element-action-found
在gradle.properties文件中加入如下代码即可
android.enableAapt2=false # 这只是忽略错误而已
实际上要把service标签移动到&lt;application&gt;标签内；

-------------------------------</rich_text>
			</node>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="python" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1527475346.07" ts_lastsave="1529566471.63" unique_id="23">
			<rich_text>========ubuntu下

直接安装
sudo apt install python3

从 源代码 编译 安装
# 安装基础，不一定是最小基础
sudo apt install gcc make zlib1g-dev libbz2-dev libbz2-dev python3-dev libxml2-dev libxslt1-dev libffi-dev libssl-dev build-essential libssl-dev libevent-dev libjpeg-dev libxslt-dev

./configure --prefix=/opt/python36
make
sudo make install

建立连接
环境变量


查看python包安装
dpkg --get-selections | grep python
查看包安装位置
dpkg -L python3

pip3包
pip[3] show --files SomePackage
pip[3] list --outdated
pip[3] install --upgrade </rich_text>
			<rich_text link="webs https://www.oschina.net/news/97079/requests-2-19-0-released">Requests</rich_text>
			<rich_text>

# pip[3] --help
 
Usage:   
  pip &lt;command&gt; [options]
 
Commands:
  install                     安装包.
  uninstall                   卸载包.
  freeze                      按着一定格式输出已安装包列表
  list                        列出已安装包.
  show                        显示包详细信息.
  search                      搜索包，类似yum里的search.
  wheel                       Build wheels from your requirements.
  zip                         不推荐. Zip individual packages.
  unzip                       不推荐. Unzip individual packages.
  bundle                      不推荐. Create pybundles.
  help                        当前帮助.
 
General Options:
  -h, --help                  显示帮助.
  -v, --verbose               更多的输出，最多可以使用3次
  -V, --version               现实版本信息然后退出.
  -q, --quiet                 最少的输出.
  --log-file &lt;path&gt;           覆盖的方式记录verbose错误日志，默认文件：/root/.pip/pip.log
  --log &lt;path&gt;                不覆盖记录verbose输出的日志.
  --proxy &lt;proxy&gt;             Specify a proxy in the form [user:passwd@]proxy.server:port.
  --timeout &lt;sec&gt;             连接超时时间 (默认15秒).
  --exists-action &lt;action&gt;    Default action when a path already exists: (s)witch, (i)gnore, (w)ipe, (b)ackup.
  --cert &lt;path&gt;               证书.

</rich_text>
			<node custom_icon_id="0" foreground="" is_bold="False" name="编码转换" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1529566471.63" ts_lastsave="1529566561.28" unique_id="34">
				<rich_text>主要介绍了python的编码机制，unicode, utf-8, utf-16, GBK, GB2312,ISO-8859-1  等编码之间的转换。
 常见的编码转换分为以下几种情况：

</rich_text>
				<rich_text scale="h2"> 自动识别 字符串编码</rich_text>
				<rich_text>
 可以使用 chardet 模块自动识别 字符创编码
 </rich_text>
				<rich_text link="webs http://www.pythonclub.org/python-basic/chardet">chardet 使用方法</rich_text>
				<rich_text>

</rich_text>
				<rich_text scale="h2"> unicode 转换为其它编码(GBK, GB2312等)</rich_text>
				<rich_text>
 例如：</rich_text>
				<rich_text background="#ffffffffffff" foreground="#af2253cee837">a为unicode编码 要转为gb2312。a.encode('gb2312')</rich_text>
				<rich_text>
</rich_text>
				<rich_text foreground="#808080" style="italic"># -*- coding=gb2312 -*-</rich_text>
				<rich_text style="italic">
a = u</rich_text>
				<rich_text foreground="#ff0000" style="italic">&quot;中文&quot;</rich_text>
				<rich_text style="italic">
a_gb2312 = a.encode</rich_text>
				<rich_text foreground="#66cc66" style="italic">(</rich_text>
				<rich_text foreground="#ff0000" style="italic">'gb2312'</rich_text>
				<rich_text foreground="#66cc66" style="italic">)</rich_text>
				<rich_text style="italic">
</rich_text>
				<rich_text foreground="#b1b100" style="italic">print</rich_text>
				<rich_text style="italic"> a_gb2312
</rich_text>
				<rich_text scale="h3" style="italic"> GBK 与 GB2312的区别</rich_text>
				<rich_text style="italic">
 GB 码，全称是GB2312-80《信息交换用汉字编码字符集基本集》，1980年发布，是中文信息处理的国家标准，在大陆及海外使用简体中文的地区（如新加坡等）是强制使用的唯一中文编码。P- Windows3.2和苹果OS就是以GB2312为基本汉字编码，  Windows 95/98则以GBK为基本汉字编码、但兼容支持GB2312。GB码共收录6763个简体汉字、682个符号，其中汉字部分：一级字3755，以拼音排序，二级字3008，以偏旁排序。该标准的制定和应用为规范、推动中文信息化进程起了很大作用。
 GBK编码是中国大陆制订的、等同于UCS的新的中文编码扩展国家标准。GBK工作小组于1995年10月，同年12月完成GBK规范。该编码标准兼容GB2312，共收录汉字21003个、符号883个，并提供1894个造字码位，简、繁体字融于一库。
 GBK 包括 GB2312的所有编码，有些字GB2312没有，需要用GBK来编码。
 </rich_text>
				<rich_text link="webs http://www.pythonclub.org/python-basic/encode-detail" style="italic">转: gbk, gb2312,big5,unicode,utf-8,utf-16的区别</rich_text>
				<rich_text style="italic">

</rich_text>
				<rich_text scale="h2" style="italic"> 其它编码(utf-8,GBK)转换为unicode</rich_text>
				<rich_text style="italic">
 例如：</rich_text>
				<rich_text background="#ffffffffffff" foreground="#af2253cee837" style="italic">a为gb2312编码，要转为unicode. unicode(a, 'gb2312')或a.decode('gb2312')</rich_text>
				<rich_text style="italic">
</rich_text>
				<rich_text foreground="#808080" style="italic"># -*- coding=gb2312 -*-</rich_text>
				<rich_text style="italic">
a = u</rich_text>
				<rich_text foreground="#ff0000" style="italic">&quot;中文&quot;</rich_text>
				<rich_text style="italic">
a_gb2312 = a.encode</rich_text>
				<rich_text foreground="#66cc66" style="italic">(</rich_text>
				<rich_text foreground="#ff0000" style="italic">'gb2312'</rich_text>
				<rich_text foreground="#66cc66" style="italic">)</rich_text>
				<rich_text style="italic">
</rich_text>
				<rich_text foreground="#b1b100" style="italic">print</rich_text>
				<rich_text style="italic"> a_gb2312
 
a_unicode = a_gb2312.decode</rich_text>
				<rich_text foreground="#66cc66" style="italic">(</rich_text>
				<rich_text foreground="#ff0000" style="italic">'gb2312'</rich_text>
				<rich_text foreground="#66cc66" style="italic">)</rich_text>
				<rich_text style="italic">
</rich_text>
				<rich_text foreground="#b1b100" style="italic">assert</rich_text>
				<rich_text foreground="#66cc66" style="italic">(</rich_text>
				<rich_text style="italic">a_unicode == a</rich_text>
				<rich_text foreground="#66cc66" style="italic">)</rich_text>
				<rich_text style="italic">
a_utf_8 = a_unicode.encode</rich_text>
				<rich_text foreground="#66cc66" style="italic">(</rich_text>
				<rich_text foreground="#ff0000" style="italic">'utf-8'</rich_text>
				<rich_text foreground="#66cc66" style="italic">)</rich_text>
				<rich_text style="italic">
</rich_text>
				<rich_text foreground="#b1b100" style="italic">print</rich_text>
				<rich_text style="italic"> a_utf_8
</rich_text>
				<rich_text scale="h2" style="italic"> 非unicode编码之间的转换</rich_text>
				<rich_text style="italic">
 编码1(GBK,GB2312) 转换为 编码2(utf-8,utf-16,ISO-8859-1)
 可以先转为unicode再转为编码2
 如gb2312转utf-8
</rich_text>
				<rich_text foreground="#808080" style="italic"># -*- coding=gb2312 -*-</rich_text>
				<rich_text style="italic">
a = u</rich_text>
				<rich_text foreground="#ff0000" style="italic">&quot;中文&quot;</rich_text>
				<rich_text style="italic">
a_gb2312 = a.encode</rich_text>
				<rich_text foreground="#66cc66" style="italic">(</rich_text>
				<rich_text foreground="#ff0000" style="italic">'gb2312'</rich_text>
				<rich_text foreground="#66cc66" style="italic">)</rich_text>
				<rich_text style="italic">
</rich_text>
				<rich_text foreground="#b1b100" style="italic">print</rich_text>
				<rich_text style="italic"> a_gb2312
 
a_unicode = a_gb2312.decode</rich_text>
				<rich_text foreground="#66cc66" style="italic">(</rich_text>
				<rich_text foreground="#ff0000" style="italic">'gb2312'</rich_text>
				<rich_text foreground="#66cc66" style="italic">)</rich_text>
				<rich_text style="italic">
</rich_text>
				<rich_text foreground="#b1b100" style="italic">assert</rich_text>
				<rich_text foreground="#66cc66" style="italic">(</rich_text>
				<rich_text style="italic">a_unicode == a</rich_text>
				<rich_text foreground="#66cc66" style="italic">)</rich_text>
				<rich_text style="italic">
a_utf_8 = a_unicode.encode</rich_text>
				<rich_text foreground="#66cc66" style="italic">(</rich_text>
				<rich_text foreground="#ff0000" style="italic">'utf-8'</rich_text>
				<rich_text foreground="#66cc66" style="italic">)</rich_text>
				<rich_text style="italic">
</rich_text>
				<rich_text foreground="#b1b100" style="italic">print</rich_text>
				<rich_text style="italic"> a_utf_8
</rich_text>
				<rich_text scale="h2" style="italic"> 判断字符串的编码</rich_text>
				<rich_text style="italic">
 isinstance(s, str) 用来判断是否为一般字符串 
 isinstance(s, unicode) 用来判断是否为unicode 
 如果一个字符串已经是unicode了，再执行unicode转换有时会出错(并不都出错) 

 下面代码为将任意字符串转换为unicode
</rich_text>
				<rich_text foreground="#b1b100" style="italic">def</rich_text>
				<rich_text style="italic"> u</rich_text>
				<rich_text foreground="#66cc66" style="italic">(</rich_text>
				<rich_text style="italic">s, encoding</rich_text>
				<rich_text foreground="#66cc66" style="italic">)</rich_text>
				<rich_text style="italic">:
    </rich_text>
				<rich_text foreground="#b1b100" style="italic">if</rich_text>
				<rich_text style="italic"> </rich_text>
				<rich_text style="italic" weight="heavy">isinstance</rich_text>
				<rich_text foreground="#66cc66" style="italic">(</rich_text>
				<rich_text style="italic">s, </rich_text>
				<rich_text style="italic" weight="heavy">unicode</rich_text>
				<rich_text foreground="#66cc66" style="italic">)</rich_text>
				<rich_text style="italic">:
        </rich_text>
				<rich_text foreground="#b1b100" style="italic">return</rich_text>
				<rich_text style="italic"> s
    </rich_text>
				<rich_text foreground="#b1b100" style="italic">else</rich_text>
				<rich_text style="italic">:
        </rich_text>
				<rich_text foreground="#b1b100" style="italic">return</rich_text>
				<rich_text style="italic"> </rich_text>
				<rich_text style="italic" weight="heavy">unicode</rich_text>
				<rich_text foreground="#66cc66" style="italic">(</rich_text>
				<rich_text style="italic">s, encoding</rich_text>
				<rich_text foreground="#66cc66" style="italic">)</rich_text>
				<rich_text style="italic">
</rich_text>
				<rich_text scale="h2" style="italic"> unicode 与其它编码之间的区别</rich_text>
				<rich_text style="italic">
 为什么不所有的文件都使用unicode，还要用GBK，utf-8等编码呢？

 unicode可以称为抽象编码，也就是它只是一种内部表示，一般不能直接保存。
 保存到磁盘上时，需要把它转换为对应的编码，如utf-8和utf-16。

</rich_text>
				<rich_text scale="h2" style="italic"> 其它方法</rich_text>
				<rich_text style="italic">
 除上以上的编码方法，在读写文件时还可以使用codecs的open方法在读写时进行转换。

</rich_text>
				<rich_text scale="h2" style="italic"> 命令行默认编码检测和设置</rich_text>
				<rich_text style="italic">
 可以用python自带的模块locale来检测命令行默认编码和设置命令行编码。
</rich_text>
				<rich_text foreground="#b1b100" style="italic">import</rich_text>
				<rich_text style="italic"> locale
 
</rich_text>
				<rich_text foreground="#808080" style="italic">#get </rich_text>
				<rich_text style="italic">
locale.getdefaultlocale</rich_text>
				<rich_text foreground="#66cc66" style="italic">()</rich_text>
				<rich_text style="italic">
</rich_text>
				<rich_text foreground="#808080" style="italic">#('zh_CN', 'cp936')</rich_text>
				<rich_text style="italic">
 
</rich_text>
				<rich_text foreground="#808080" style="italic">#set</rich_text>
				<rich_text style="italic">
locale.setlocale</rich_text>
				<rich_text foreground="#66cc66" style="italic">(</rich_text>
				<rich_text style="italic">...</rich_text>
				<rich_text foreground="#66cc66" style="italic">)</rich_text>
				<rich_text style="italic">
</rich_text>
				<rich_text scale="h2" style="italic"> 汉字转Unicode编码</rich_text>
				<rich_text style="italic">
    pd_name = pd_name.decode</rich_text>
				<rich_text foreground="#66cc66" style="italic">(</rich_text>
				<rich_text foreground="#ff0000" style="italic">'utf-8'</rich_text>
				<rich_text foreground="#66cc66" style="italic">)</rich_text>
				<rich_text style="italic">
    </rich_text>
				<rich_text foreground="#b1b100" style="italic">print</rich_text>
				<rich_text style="italic"> pd_name
    nname = </rich_text>
				<rich_text foreground="#ff0000" style="italic">&quot;&quot;</rich_text>
				<rich_text style="italic">
    </rich_text>
				<rich_text foreground="#b1b100" style="italic">for</rich_text>
				<rich_text style="italic"> c </rich_text>
				<rich_text foreground="#b1b100" style="italic">in</rich_text>
				<rich_text style="italic"> pd_name:
      c = </rich_text>
				<rich_text foreground="#ff0000" style="italic">&quot;%%u%04X&quot;</rich_text>
				<rich_text style="italic"> </rich_text>
				<rich_text foreground="#66cc66" style="italic">%</rich_text>
				<rich_text style="italic"> </rich_text>
				<rich_text style="italic" weight="heavy">ord</rich_text>
				<rich_text foreground="#66cc66" style="italic">(</rich_text>
				<rich_text style="italic">c</rich_text>
				<rich_text foreground="#66cc66" style="italic">);</rich_text>
				<rich_text style="italic">
      nname += c            </rich_text>
			</node>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="扩展开发 新 idea" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1527733193.98" ts_lastsave="1527733195.78" unique_id="25">
			<rich_text>

排序明确扩展 升降</rich_text>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="python正则表达式" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1528880716.41" ts_lastsave="1528881372.6" unique_id="27">
			<rich_text>
</rich_text>
			<rich_text scale="h2">1. 正则表达式基础</rich_text>
			<rich_text>
  
</rich_text>
			<rich_text scale="h3">1.1. 简单介绍</rich_text>
			<rich_text>
  正则表达式并不是Python的一部分。正则表达式是用于处理字符串的强大工具，拥有自己独特的语法以及一个独立的处理引擎，效率上可能不如str自带的方法，但功能十分强大。得益于这一点，在提供了正则表达式的语言里，正则表达式的语法都是一样的，区别只在于不同的编程语言实现支持的语法数量不同；但不用担心，不被支持的语法通常是不常用的部分。如果已经在其他语言里使用过正则表达式，只需要简单看一看就可以上手了。
  下图展示了使用正则表达式进行匹配的流程：    
</rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text> 
  正则表达式的大致匹配过程是：依次拿出表达式和文本中的字符比较，如果每一个字符都能匹配，则匹配成功；一旦有匹配不成功的字符则匹配失败。如果表达式中有量词或边界，这个过程会稍微有一些不同，但也是很好理解的，看下图中的示例以及自己多使用几次就能明白。
  下图列出了Python支持的正则表达式元字符和语法：   
</rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
  
</rich_text>
			<rich_text scale="h3">1.2. 数量词的贪婪模式与非贪婪模式</rich_text>
			<rich_text>
  正则表达式通常用于在文本中查找匹配的字符串。Python里数量词默认是贪婪的（在少数语言里也可能是默认非贪婪），总是尝试匹配尽可能多的字符；非贪婪的则相反，总是尝试匹配尽可能少的字符。例如：正则表达式&quot;ab*&quot;如果用于查找&quot;abbbc&quot;，将找到&quot;abbb&quot;。而如果使用非贪婪的数量词&quot;ab*?&quot;，将找到&quot;a&quot;。
  
</rich_text>
			<rich_text scale="h3">1.3. 反斜杠的困扰</rich_text>
			<rich_text>
  与大多数编程语言相同，正则表达式里使用&quot;\&quot;作为转义字符，这就可能造成反斜杠困扰。假如你需要匹配文本中的字符&quot;\&quot;，那么使用编程语言表示的正则表达式里将需要4个反斜杠&quot;\\\\&quot;：前两个和后两个分别用于在编程语言里转义成反斜杠，转换成两个反斜杠后再在正则表达式里转义成一个反斜杠。Python里的原生字符串很好地解决了这个问题，这个例子中的正则表达式可以使用r&quot;\\&quot;表示。同样，匹配一个数字的&quot;\\d&quot;可以写成r&quot;\d&quot;。有了原生字符串，你再也不用担心是不是漏写了反斜杠，写出来的表达式也更直观。
  
</rich_text>
			<rich_text scale="h3">1.4. 匹配模式</rich_text>
			<rich_text>
  正则表达式提供了一些可用的匹配模式，比如忽略大小写、多行匹配等，这部分内容将在Pattern类的工厂方法re.compile(pattern[, flags])中一起介绍。
  
</rich_text>
			<rich_text scale="h2">2. re模块</rich_text>
			<rich_text>
  
</rich_text>
			<rich_text scale="h3">2.1. 开始使用re</rich_text>
			<rich_text>
  Python通过re模块提供对正则表达式的支持。使用re的一般步骤是先将正则表达式的字符串形式编译为Pattern实例，然后使用Pattern实例处理文本并获得匹配结果（一个Match实例），最后使用Match实例获得信息，进行其他的操作。
  </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
</rich_text>
			<rich_text weight="heavy">re.compile(strPattern[, flag]): </rich_text>
			<rich_text>
这个方法是Pattern类的工厂方法，用于将字符串形式的正则表达式编译为Pattern对象。  第二个参数flag是匹配模式，取值可以使用按位或运算符'|'表示同时生效，比如re.I |  re.M。另外，你也可以在regex字符串中指定模式，比如re.compile('pattern', re.I |  re.M)与re.compile('(?im)pattern')是等价的。    
可选值有： 
  • re.</rich_text>
			<rich_text weight="heavy">I</rich_text>
			<rich_text>(re.IGNORECASE): 忽略大小写（括号内是完整写法，下同） 
  • </rich_text>
			<rich_text weight="heavy">M</rich_text>
			<rich_text>(MULTILINE): 多行模式，改变'^'和'$'的行为（参见上图） 
  • </rich_text>
			<rich_text weight="heavy">S</rich_text>
			<rich_text>(DOTALL): 点任意匹配模式，改变'.'的行为 
  • </rich_text>
			<rich_text weight="heavy">L</rich_text>
			<rich_text>(LOCALE): 使预定字符类 \w \W \b \B \s \S 取决于当前区域设定 
  • </rich_text>
			<rich_text weight="heavy">U</rich_text>
			<rich_text>(UNICODE): 使预定字符类 \w \W \b \B \s \S \d \D 取决于unicode定义的字符属性 
  • </rich_text>
			<rich_text weight="heavy">X</rich_text>
			<rich_text>(VERBOSE): 详细模式。这个模式下正则表达式可以是多行，忽略空白字符，并可以加入注释。以下两个正则表达式是等价的： 
</rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
re提供了众多模块方法用于完成正则表达式的功能。这些方法可以使用Pattern实例的相应方法替代，唯一的好处是少写一行re.compile()代码，但同时也无法复用编译后的Pattern对象。这些方法将在Pattern类的实例方法部分一起介绍。如上面这个例子可以简写为：
</rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
re模块还提供了一个方法escape(string)，用于将string中的正则表达式元字符如*/+/?等之前加上转义符再返回，在需要大量匹配元字符时有那么一点用。

</rich_text>
			<rich_text scale="h3">2.2. Match</rich_text>
			<rich_text>
Match对象是一次匹配的结果，包含了很多关于此次匹配的信息，可以使用Match提供的可读属性或方法来获取这些信息。
属性：
  1. </rich_text>
			<rich_text weight="heavy">string</rich_text>
			<rich_text>: 匹配时使用的文本。 
  2. </rich_text>
			<rich_text weight="heavy">re</rich_text>
			<rich_text>: 匹配时使用的Pattern对象。 
  3. </rich_text>
			<rich_text weight="heavy">pos</rich_text>
			<rich_text>: 文本中正则表达式开始搜索的索引。值与Pattern.match()和Pattern.seach()方法的同名参数相同。 
  4. </rich_text>
			<rich_text weight="heavy">endpos</rich_text>
			<rich_text>: 文本中正则表达式结束搜索的索引。值与Pattern.match()和Pattern.seach()方法的同名参数相同。 
  5. </rich_text>
			<rich_text weight="heavy">lastindex</rich_text>
			<rich_text>: 最后一个被捕获的分组在文本中的索引。如果没有被捕获的分组，将为None。 
  6. </rich_text>
			<rich_text weight="heavy">lastgroup</rich_text>
			<rich_text>: 最后一个被捕获的分组的别名。如果这个分组没有别名或者没有被捕获的分组，将为None。 
方法：
  1. </rich_text>
			<rich_text weight="heavy">group([group1, …]): </rich_text>
			<rich_text>    
获得一个或多个分组截获的字符串；指定多个参数时将以元组形式返回。group1可以使用编号也可以使用别名；编号0代表整个匹配的子串；不填写参数时，返回group(0)；没有截获字符串的组返回None；截获了多次的组返回最后一次截获的子串。 
  2. </rich_text>
			<rich_text weight="heavy">groups([default]):</rich_text>
			<rich_text>     
以元组形式返回全部分组截获的字符串。相当于调用group(1,2,…last)。default表示没有截获字符串的组以这个值替代，默认为None。 
  3. </rich_text>
			<rich_text weight="heavy">groupdict([default]):        
</rich_text>
			<rich_text>返回以有别名的组的别名为键、以该组截获的子串为值的字典，没有别名的组不包含在内。default含义同上。 
  4. </rich_text>
			<rich_text weight="heavy">start([group]):</rich_text>
			<rich_text>     
返回指定的组截获的子串在string中的起始索引（子串第一个字符的索引）。group默认值为0。 
  5. </rich_text>
			<rich_text weight="heavy">end([group]):        
</rich_text>
			<rich_text>返回指定的组截获的子串在string中的结束索引（子串最后一个字符的索引+1）。group默认值为0。 
  6. </rich_text>
			<rich_text weight="heavy">span([group]):        
</rich_text>
			<rich_text>返回(start(group), end(group))。 
  7. </rich_text>
			<rich_text weight="heavy">expand(template):</rich_text>
			<rich_text>     
将匹配到的分组代入template中然后返回。template中可以使用\id或\g&lt;id&gt;、\g&lt;name&gt;引用分组，但不能使用编号0。\id与\g&lt;id&gt;是等价的；但\10将被认为是第10个分组，如果你想表达\1之后是字符'0'，只能使用\g&lt;1&gt;0。 
</rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>

</rich_text>
			<rich_text scale="h3">2.3. Pattern</rich_text>
			<rich_text>
Pattern对象是一个编译好的正则表达式，通过Pattern提供的一系列方法可以对文本进行匹配查找。
Pattern不能直接实例化，必须使用re.compile()进行构造。
Pattern提供了几个可读属性用于获取表达式的相关信息：
  1. pattern: 编译时用的表达式字符串。 
  2. flags: 编译时用的匹配模式。数字形式。 
  3. groups: 表达式中分组的数量。 
  4. groupindex: 以表达式中有别名的组的别名为键、以该组对应的编号为值的字典，没有别名的组不包含在内。 
</rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
实例方法[ | re模块方法]：
  1. </rich_text>
			<rich_text weight="heavy">match(string[, pos[, endpos]]) | re.match(pattern, string[, flags]):        
</rich_text>
			<rich_text>这个方法将从string的pos下标处起尝试匹配pattern；如果pattern结束时仍可匹配，则返回一个Match对象；如果匹配过程中pattern无法匹配，或者匹配未结束就已到达endpos，则返回None。     
pos和endpos的默认值分别为0和len(string)；re.match()无法指定这两个参数，参数flags用于编译pattern时指定匹配模式。     
注意：这个方法并不是完全匹配。当pattern结束时若string还有剩余字符，仍然视为成功。想要完全匹配，可以在表达式末尾加上边界匹配符'$'。     
示例参见2.1小节。 
  2. </rich_text>
			<rich_text weight="heavy">search(string[, pos[, endpos]]) | re.search(pattern, string[, flags]):        
</rich_text>
			<rich_text>这个方法用于查找字符串中可以匹配成功的子串。从string的pos下标处起尝试匹配pattern，如果pattern结束时仍可匹配，则返回一个Match对象；若无法匹配，则将pos加1后重新尝试匹配；直到pos=endpos时仍无法匹配则返回None。     
pos和endpos的默认值分别为0和len(string))；re.search()无法指定这两个参数，参数flags用于编译pattern时指定匹配模式。     
    </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
  
  3. </rich_text>
			<rich_text weight="heavy">split(string[, maxsplit]) | re.split(pattern, string[, maxsplit]):        
</rich_text>
			<rich_text>按照能够匹配的子串将string分割后返回列表。maxsplit用于指定最大分割次数，不指定将全部分割。     
    </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
  
  4. </rich_text>
			<rich_text weight="heavy">findall(string[, pos[, endpos]]) | re.findall(pattern, string[, flags]):        
</rich_text>
			<rich_text>搜索string，以列表形式返回全部能匹配的子串。     
    </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
  
  5. </rich_text>
			<rich_text weight="heavy">finditer(string[, pos[, endpos]]) | re.finditer(pattern, string[, flags]):        
</rich_text>
			<rich_text>搜索string，返回一个顺序访问每一个匹配结果（Match对象）的迭代器。     
    </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
  
  6. </rich_text>
			<rich_text weight="heavy">sub(repl, string[, count]) | re.sub(pattern, repl, string[, count]):        
</rich_text>
			<rich_text>使用repl替换string中每一个匹配的子串后返回替换后的字符串。     
当repl是一个字符串时，可以使用\id或\g&lt;id&gt;、\g&lt;name&gt;引用分组，但不能使用编号0。     
当repl是一个方法时，这个方法应当只接受一个参数（Match对象），并返回一个字符串用于替换（返回的字符串中不能再引用分组）。     
count用于指定最多替换次数，不指定时全部替换。     
    </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
  
  7. </rich_text>
			<rich_text weight="heavy">subn(repl, string[, count]) |re.sub(pattern, repl, string[, count]):        
</rich_text>
			<rich_text>返回 (sub(repl, string[, count]), 替换次数)。     
    </rich_text>
			<rich_text justification="left"></rich_text>
			<rich_text>
  
</rich_text>
			<rich_text weight="heavy">以上就是Python对于正则表达式的支持。熟练掌握正则表达式是每一个程序员必须具备的技能，这年头没有不与字符串打交道的程序了。笔者也处于初级阶段，与君共勉，^_^</rich_text>
			<rich_text>
另外，图中的特殊构造部分没有举出例子，用到这些的正则表达式是具有一定难度的。有兴趣可以思考一下，如何匹配不是以abc开头的单词，^_^
</rich_text>
			<rich_text weight="heavy">全文结束</rich_text>
			<rich_text>

python的正则表达式中需要转义的元字符有以下几个：
1. .
2. ^
3. $
4. *
5. +
6. ?
7. \\
8. []
9. |
10. {}
11. ()


</rich_text>
			<encoded_png char_offset="254"></encoded_png>
			<encoded_png char_offset="414"></encoded_png>
			<table char_offset="1117" col_max="400" col_min="40">
				<row>
					<cell>123456789101112131415</cell>
					<cell># encoding: UTF-8import re # 将正则表达式编译成Pattern对象pattern = re.compile(r'hello') # 使用Pattern匹配文本，获得匹配结果，无法匹配时将返回Nonematch = pattern.match('hello world!') if match:    # 使用Match获得分组信息    print match.group() ### 输出 #### hello</cell>
				</row>
				<row>
					<cell>点击这里</cell>
					<cell>点击这里</cell>
				</row>
			</table>
			<table char_offset="1661" col_max="400" col_min="40">
				<row>
					<cell>1234</cell>
					<cell>a = re.compile(r&quot;&quot;&quot;\d +  # the integral part                   \.    # the decimal point                   \d *  # some fractional digits&quot;&quot;&quot;, re.X)b = re.compile(r&quot;\d+\.\d*&quot;)</cell>
				</row>
				<row>
					<cell>点击这里</cell>
					<cell>点击这里</cell>
				</row>
			</table>
			<table char_offset="1799" col_max="400" col_min="40">
				<row>
					<cell>12</cell>
					<cell>m = re.match(r'hello', 'hello world!')print m.group()</cell>
				</row>
				<row>
					<cell>点击这里</cell>
					<cell>点击这里</cell>
				</row>
			</table>
			<table char_offset="2989" col_max="400" col_min="40">
				<row>
					<cell>1234567891011121314151617181920212223242526272829303132</cell>
					<cell>import rem = re.match(r'(\w+) (\w+)(?P&lt;sign&gt;.*)', 'hello world!') print &quot;m.string:&quot;, m.stringprint &quot;m.re:&quot;, m.reprint &quot;m.pos:&quot;, m.posprint &quot;m.endpos:&quot;, m.endposprint &quot;m.lastindex:&quot;, m.lastindexprint &quot;m.lastgroup:&quot;, m.lastgroup print &quot;m.group(1,2):&quot;, m.group(1, 2)print &quot;m.groups():&quot;, m.groups()print &quot;m.groupdict():&quot;, m.groupdict()print &quot;m.start(2):&quot;, m.start(2)print &quot;m.end(2):&quot;, m.end(2)print &quot;m.span(2):&quot;, m.span(2)print r&quot;m.expand(r'\2 \1\3'):&quot;, m.expand(r'\2 \1\3') ### output #### m.string: hello world!# m.re: &lt;_sre.SRE_Pattern object at 0x016E1A38&gt;# m.pos: 0# m.endpos: 12# m.lastindex: 3# m.lastgroup: sign# m.group(1,2): ('hello', 'world')# m.groups(): ('hello', 'world', '!')# m.groupdict(): {'sign': '!'}# m.start(2): 6# m.end(2): 11# m.span(2): (6, 11)# m.expand(r'\2 \1\3'): world hello!</cell>
				</row>
				<row>
					<cell>点击这里</cell>
					<cell>点击这里</cell>
				</row>
			</table>
			<table char_offset="3267" col_max="400" col_min="40">
				<row>
					<cell>12345678910111213</cell>
					<cell>import rep = re.compile(r'(\w+) (\w+)(?P&lt;sign&gt;.*)', re.DOTALL) print &quot;p.pattern:&quot;, p.patternprint &quot;p.flags:&quot;, p.flagsprint &quot;p.groups:&quot;, p.groupsprint &quot;p.groupindex:&quot;, p.groupindex ### output #### p.pattern: (\w+) (\w+)(?P&lt;sign&gt;.*)# p.flags: 16# p.groups: 3# p.groupindex: {'sign': 3}</cell>
				</row>
				<row>
					<cell>点击这里</cell>
					<cell>点击这里</cell>
				</row>
			</table>
			<table char_offset="3960" col_max="400" col_min="40">
				<row>
					<cell>12345678910111213141516</cell>
					<cell># encoding: UTF-8 import re  # 将正则表达式编译成Pattern对象 pattern = re.compile(r'world')  # 使用search()查找匹配的子串，不存在能匹配的子串时将返回None # 这个例子中使用match()无法成功匹配 match = pattern.search('hello world!')  if match:     # 使用Match获得分组信息     print match.group()  ### 输出 ### # world</cell>
				</row>
				<row>
					<cell>点击这里</cell>
					<cell>点击这里</cell>
				</row>
			</table>
			<table char_offset="4107" col_max="400" col_min="40">
				<row>
					<cell>1234567</cell>
					<cell>import re p = re.compile(r'\d+')print p.split('one1two2three3four4') ### output #### ['one', 'two', 'three', 'four', '']</cell>
				</row>
				<row>
					<cell>点击这里</cell>
					<cell>点击这里</cell>
				</row>
			</table>
			<table char_offset="4233" col_max="400" col_min="40">
				<row>
					<cell></cell>
					<cell>import re p = re.compile(r'\d+')print p.findall('one1two2three3four4') ### output #### ['1', '2', '3', '4']</cell>
				</row>
				<row>
					<cell>点击这里</cell>
					<cell>点击这里</cell>
				</row>
			</table>
			<table char_offset="4374" col_max="400" col_min="40">
				<row>
					<cell></cell>
					<cell>import re p = re.compile(r'\d+')for m in p.finditer('one1two2three3four4'):    print m.group(), ### output #### 1 2 3 4</cell>
				</row>
				<row>
					<cell>点击这里</cell>
					<cell>点击这里</cell>
				</row>
			</table>
			<table char_offset="4662" col_max="400" col_min="40">
				<row>
					<cell>123456789101112131415</cell>
					<cell>import re p = re.compile(r'(\w+) (\w+)')s = 'i say, hello world!' print p.sub(r'\2 \1', s) def func(m):    return m.group(1).title() + ' ' + m.group(2).title() print p.sub(func, s) ### output #### say i, world hello!# I Say, Hello World!</cell>
				</row>
				<row>
					<cell>点击这里</cell>
					<cell>点击这里</cell>
				</row>
			</table>
			<table char_offset="4797" col_max="400" col_min="40">
				<row>
					<cell>123456789101112131415</cell>
					<cell>import re p = re.compile(r'(\w+) (\w+)')s = 'i say, hello world!' print p.subn(r'\2 \1', s) def func(m):    return m.group(1).title() + ' ' + m.group(2).title() print p.subn(func, s) ### output #### ('say i, world hello!', 2)# ('I Say, Hello World!', 2)</cell>
				</row>
				<row>
					<cell>点击这里</cell>
					<cell>点击这里</cell>
				</row>
			</table>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="工作用技术，特定写法集合" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1529379572.33" ts_lastsave="1529380450.66" unique_id="30">
			<rich_text>js--按钮不可用/可用设置
</rich_text>
			<rich_text foreground="#569cd6">var</rich_text>
			<rich_text> buttonDisabled </rich_text>
			<rich_text foreground="#b4b4b4">=</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#569cd6">function</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text>id</rich_text>
			<rich_text foreground="#ff80ff">)</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff80ff">{</rich_text>
			<rich_text>
        $</rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text foreground="#d69d85">'#'</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#b4b4b4">+</rich_text>
			<rich_text> id</rich_text>
			<rich_text foreground="#ff80ff">).</rich_text>
			<rich_text>addClass</rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text foreground="#d69d85">'disabled'</rich_text>
			<rich_text foreground="#ff80ff">);</rich_text>
			<rich_text>
        $</rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text foreground="#d69d85">'#'</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#b4b4b4">+</rich_text>
			<rich_text> id</rich_text>
			<rich_text foreground="#ff80ff">).</rich_text>
			<rich_text>removeClass</rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text foreground="#d69d85">'btn-primary'</rich_text>
			<rich_text foreground="#ff80ff">);</rich_text>
			<rich_text>
        $</rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text foreground="#d69d85">'#'</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#b4b4b4">+</rich_text>
			<rich_text> id</rich_text>
			<rich_text foreground="#ff80ff">).</rich_text>
			<rich_text>addClass</rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text foreground="#d69d85">'btn-default'</rich_text>
			<rich_text foreground="#ff80ff">);</rich_text>
			<rich_text>
        $</rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text foreground="#d69d85">'#'</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#b4b4b4">+</rich_text>
			<rich_text> id</rich_text>
			<rich_text foreground="#ff80ff">).</rich_text>
			<rich_text>prop</rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text foreground="#d69d85">'disabled'</rich_text>
			<rich_text foreground="#ff80ff">,</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#569cd6">true</rich_text>
			<rich_text foreground="#ff80ff">);</rich_text>
			<rich_text>
    </rich_text>
			<rich_text foreground="#ff80ff">}</rich_text>
			<rich_text>
 
    </rich_text>
			<rich_text foreground="#569cd6">var</rich_text>
			<rich_text> buttonEnabled </rich_text>
			<rich_text foreground="#b4b4b4">=</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#569cd6">function</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text>id</rich_text>
			<rich_text foreground="#ff80ff">)</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff80ff">{</rich_text>
			<rich_text>
        $</rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text foreground="#d69d85">'#'</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#b4b4b4">+</rich_text>
			<rich_text> id</rich_text>
			<rich_text foreground="#ff80ff">).</rich_text>
			<rich_text>removeClass</rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text foreground="#d69d85">'disabled'</rich_text>
			<rich_text foreground="#ff80ff">);</rich_text>
			<rich_text>
        $</rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text foreground="#d69d85">'#'</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#b4b4b4">+</rich_text>
			<rich_text> id</rich_text>
			<rich_text foreground="#ff80ff">).</rich_text>
			<rich_text>addClass</rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text foreground="#d69d85">'btn-primary'</rich_text>
			<rich_text foreground="#ff80ff">);</rich_text>
			<rich_text>
        $</rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text foreground="#d69d85">'#'</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#b4b4b4">+</rich_text>
			<rich_text> id</rich_text>
			<rich_text foreground="#ff80ff">).</rich_text>
			<rich_text>removeClass</rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text foreground="#d69d85">'btn-default'</rich_text>
			<rich_text foreground="#ff80ff">);</rich_text>
			<rich_text>
        $</rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text foreground="#d69d85">'#'</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#b4b4b4">+</rich_text>
			<rich_text> id</rich_text>
			<rich_text foreground="#ff80ff">).</rich_text>
			<rich_text>prop</rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text foreground="#d69d85">'disabled'</rich_text>
			<rich_text foreground="#ff80ff">,</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#569cd6">false</rich_text>
			<rich_text foreground="#ff80ff">);</rich_text>
			<rich_text>
    </rich_text>
			<rich_text foreground="#ff80ff">}</rich_text>
			<rich_text>

js-信息提示条
Amps</rich_text>
			<rich_text foreground="#ff80ff">.</rich_text>
			<rich_text>TipAlert</rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text foreground="#d69d85">'alert-success'</rich_text>
			<rich_text foreground="#ff80ff">,</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#d69d85">'操作成功'</rich_text>
			<rich_text foreground="#ff80ff">);</rich_text>
			<rich_text> // 成功
Amps</rich_text>
			<rich_text foreground="#ff80ff">.</rich_text>
			<rich_text>TipAlert</rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text foreground="#d69d85">'alert-warning'</rich_text>
			<rich_text foreground="#ff80ff">,</rich_text>
			<rich_text> res</rich_text>
			<rich_text foreground="#ff80ff">.</rich_text>
			<rich_text>Message</rich_text>
			<rich_text foreground="#ff80ff">);</rich_text>
			<rich_text> // 失败

js--打开tab窗口
parent</rich_text>
			<rich_text foreground="#ff80ff">.</rich_text>
			<rich_text>CreatTabEvent</rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text>linkkey</rich_text>
			<rich_text foreground="#ff80ff">,</rich_text>
			<rich_text> url</rich_text>
			<rich_text foreground="#ff80ff">,</rich_text>
			<rich_text> linktitle</rich_text>
			<rich_text foreground="#ff80ff">);</rich_text>
			<rich_text>//窗口id，地址，标题

js--显示modal和关闭modal，模式窗口
$</rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text foreground="#d69d85">&quot;#MemoModal&quot;</rich_text>
			<rich_text foreground="#ff80ff">).</rich_text>
			<rich_text>modal</rich_text>
			<rich_text foreground="#ff80ff">();</rich_text>
			<rich_text>//显示modal
$</rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text foreground="#d69d85">&quot;#MemoModal&quot;</rich_text>
			<rich_text foreground="#ff80ff">).</rich_text>
			<rich_text>modal</rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text foreground="#d69d85">&quot;hide&quot;</rich_text>
			<rich_text foreground="#ff80ff">);</rich_text>
			<rich_text>//关闭modal窗口

js--本地刷新
location</rich_text>
			<rich_text foreground="#ff80ff">.</rich_text>
			<rich_text>reload</rich_text>
			<rich_text foreground="#ff80ff">();</rich_text>
			<rich_text>

js--模块写法
</rich_text>
			<rich_text foreground="#569cd6">var</rich_text>
			<rich_text> ModelA </rich_text>
			<rich_text foreground="#b4b4b4">=</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text foreground="#569cd6">function</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff80ff">()</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff80ff">{</rich_text>
			<rich_text>
        </rich_text>
			<rich_text foreground="#569cd6">return</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff80ff">{</rich_text>
			<rich_text>
            FuncName</rich_text>
			<rich_text foreground="#ff80ff">:</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#569cd6">function</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff80ff">(id)</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff80ff">{</rich_text>
			<rich_text>
                ...
            </rich_text>
			<rich_text foreground="#ff80ff">}</rich_text>
			<rich_text>
        </rich_text>
			<rich_text foreground="#ff80ff">}</rich_text>
			<rich_text>
    </rich_text>
			<rich_text foreground="#ff80ff">}(</rich_text>
			<rich_text>ModelA </rich_text>
			<rich_text foreground="#b4b4b4">||</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff80ff">{}));</rich_text>
			<rich_text>

js--ajax写法
UI</rich_text>
			<rich_text foreground="#ff80ff">.</rich_text>
			<rich_text>ajax</rich_text>
			<rich_text foreground="#ff80ff">({</rich_text>
			<rich_text>
    url</rich_text>
			<rich_text foreground="#ff80ff">:</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#d69d85">''</rich_text>
			<rich_text foreground="#ff80ff">,</rich_text>
			<rich_text>
    type</rich_text>
			<rich_text foreground="#ff80ff">:</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#d69d85">&quot;post&quot;</rich_text>
			<rich_text foreground="#ff80ff">,</rich_text>
			<rich_text>
    dataType</rich_text>
			<rich_text foreground="#ff80ff">:</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#d69d85">&quot;json&quot;</rich_text>
			<rich_text foreground="#ff80ff">,</rich_text>
			<rich_text>
    data</rich_text>
			<rich_text foreground="#ff80ff">:</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff80ff">{</rich_text>
			<rich_text>
    </rich_text>
			<rich_text foreground="#ff80ff">},</rich_text>
			<rich_text>
    success</rich_text>
			<rich_text foreground="#ff80ff">:</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#569cd6">function</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text>res</rich_text>
			<rich_text foreground="#ff80ff">)</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff80ff">{</rich_text>
			<rich_text>
        </rich_text>
			<rich_text foreground="#569cd6">if</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text>res</rich_text>
			<rich_text foreground="#ff80ff">.</rich_text>
			<rich_text>Status</rich_text>
			<rich_text foreground="#ff80ff">)</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff80ff">{</rich_text>
			<rich_text>
            Amps</rich_text>
			<rich_text foreground="#ff80ff">.</rich_text>
			<rich_text>TipAlert</rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text foreground="#d69d85">'alert-success'</rich_text>
			<rich_text foreground="#ff80ff">,</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#d69d85">'操作成功'</rich_text>
			<rich_text foreground="#ff80ff">);</rich_text>
			<rich_text>
            location</rich_text>
			<rich_text foreground="#ff80ff">.</rich_text>
			<rich_text>reload</rich_text>
			<rich_text foreground="#ff80ff">();</rich_text>
			<rich_text>
        </rich_text>
			<rich_text foreground="#ff80ff">}</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#569cd6">else</rich_text>
			<rich_text> </rich_text>
			<rich_text foreground="#ff80ff">{</rich_text>
			<rich_text>
            Amps</rich_text>
			<rich_text foreground="#ff80ff">.</rich_text>
			<rich_text>TipAlert</rich_text>
			<rich_text foreground="#ff80ff">(</rich_text>
			<rich_text foreground="#d69d85">'alert-warning'</rich_text>
			<rich_text foreground="#ff80ff">,</rich_text>
			<rich_text> res</rich_text>
			<rich_text foreground="#ff80ff">.</rich_text>
			<rich_text>Message</rich_text>
			<rich_text foreground="#ff80ff">);</rich_text>
			<rich_text>
        </rich_text>
			<rich_text foreground="#ff80ff">}</rich_text>
			<rich_text>
    </rich_text>
			<rich_text foreground="#ff80ff">}</rich_text>
			<rich_text>
</rich_text>
			<rich_text foreground="#ff80ff">});</rich_text>
			<rich_text>
</rich_text>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="Nodejs" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1529579756.96" ts_lastsave="1529579779.96" unique_id="35">
			<rich_text></rich_text>
			<node custom_icon_id="0" foreground="" is_bold="False" name="nodejs redis" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1529579779.96" ts_lastsave="1529579782.2" unique_id="36">
				<rich_text>利用redis、co-redis进行redis操作
</rich_text>
				<rich_text family="monospace">/**
 * redis操作示例
 */

// 准备工作：npm install redis co-redis (--save) 
// 开发机ip： 
// 默认端口：6379

// 文档参考：https://www.npmjs.com/package/redis         (node-redis)
// 文档参考：https://www.npmjs.com/package/co-redis      (co-redis)
// 文档参考：http://www.redis.cn/commands.html               (redis命令)

// 开发机测试配置：启动redis服务后加 --protected-mode no 选项 使其允许远程连接

var co = require('co');
var redis = require('redis');
var wrapper = require('co-redis');
var log = Log('models.redis');

//var redisClient = redis.createClient();

// redis配置参数
var redis_config = {
    &quot;host&quot;: &quot;&quot;,
    &quot;port&quot;: 6379
};
var redisClient = redis.createClient(redis_config);

// 数据库选择
/*
 * redis默认连接数据库0,可以利用select选择指定数据库0~15
 * 使用示例：
 * redisClient.select(&quot;15&quot;, function (err) {
 *  if (err) {
 *      return false;
 *  } else {
 *      console.log('connect success');
 *  }   
 * });
 */

// 使用co-redis包装redisClient
var redisCo = wrapper(redisClient);

// 利用co-redis包装将redis命令以返回值形式直接输出
/*co(function* () {
  var set = yield redisCo.set('test', 33);
  console.log(set);
  console.log(yield redisCo.get('test')); // logs 33 

  redisClient.quit();
}).catch(function(e) {

});*/

// redis命令使用示例  
/*
 * 基本示例：
 * redisClient.set('key', 'value', function (res, reply) {});
 *
 * 命令参数：
 * 1、字符串
 * 2、数组 (注：非所有命令均可用)
 * (对于hash操作，赋值可使用json)
 * (后跟回调函数[可选]) (利用co-redis可以将命令以返回值形式输出) 
 * 
 * 使用示例(不同参数样式实现相同功能)
 * 
 * client.hmset([&quot;key&quot;, &quot;test keys 1&quot;, &quot;test val 1&quot;, &quot;test keys 2&quot;, &quot;test val 2&quot;], function (err, res) {});
 * client.hmset(&quot;key&quot;, [&quot;test keys 1&quot;, &quot;test val 1&quot;, &quot;test keys 2&quot;, &quot;test val 2&quot;], function (err, res) {});
 * client.hmset(&quot;key&quot;, &quot;test keys 1&quot;, &quot;test val 1&quot;, &quot;test keys 2&quot;, &quot;test val 2&quot;, function (err, res) {});   
 *
 * client.set(&quot;some key&quot;, &quot;some val&quot;);
 * client.set([&quot;some other key&quot;, &quot;some val&quot;]);
 *
 * client.hmset(hash, obj[, callback])      (此处可以使用json)    
 * client.hmset(hash, key1, val1, ... keyn, valn, [callback])
 */

 // redis数据类型命令汇总
 /*
  * string 字符串
  *     命令                  行为                                              返回值                     使用示例(略去回调函数)
  *     set         设置存储在给定键中的值                      OK                         set('key', 'value')
  *     get         获取存储在给定键中的值                     value/null          get('key')
  *     del         删除存储在给定键中的值(任意类型)    1/0                        del('key')
  *     incrby  将键存储的值加上整数increment                                         incrby('key', increment)
  *     decrby  将键存储的值减去整数increment                                         decrby('key', increment)
  *     incrbyfloat 将键存储的值加上浮点数increment                                incrbyfloat('key', increment)   
  *     append  将值value追加到给定键当前存储值的末尾                           append('key', 'new-value')
  *     getrange    获取指定键的index范围内的所有字符组成的子串            getrange('key', 'start-index', 'end-index')
  *     setrange    将指定键值从指定偏移量开始的子串设为指定值           setrange('key', 'offset', 'new-string')
  *     
  * list 列表
  *   命令                    行为                                              返回值                     使用示例(略去回调函数)
  *     rpush       将给定值推入列表的右端                     当前列表长度      rpush('key', 'value1' [,'value2']) (支持数组赋值)
  *     lrange  获取列表在给定范围上的所有值          array                       lrange('key', 0, -1) (返回所有值)
  *     lindex  获取列表在给定位置上的单个元素                                     lindex('key', 1)
  *     lpop        从列表左端弹出一个值，并返回被弹出的值                     lpop('key')
  *     rpop        从列表右端弹出一个值，并返回被弹出的值                     rpop('key')
  *     ltrim       将列表按指定的index范围裁减                                                ltrim('key', 'start', 'end')
  *
  * set 集合
  *     命令                  行为                                              返回值                     使用示例(略去回调函数)
  *     sadd            将给定元素添加到集合                      插入元素数量      sadd('key', 'value1'[, 'value2', ...]) (不支持数组赋值)(元素不允许重复)
  *     smembers    返回集合中包含的所有元素                array(无序)           smembers('key')
  *     sismenber   检查给定的元素是否存在于集合中 1/0                         sismenber('key', 'value')
  *     srem            如果给定的元素在集合中，则移除此元素 1/0              srem('key', 'value')
  *     scad            返回集合包含的元素的数量                                                sacd('key')   
  *     spop            随机地移除集合中的一个元素，并返回此元素                spop('key')
  *     smove           集合元素的迁移                                                                 smove('source-key', 'dest-key', 'item')
  *     sdiff           返回那些存在于第一个集合，但不存在于其他集合的元素(差集)   sdiff('key1', 'key2'[, 'key3', ...])   
  *     sdiffstore  将sdiff操作的结果存储到指定的键中                         sdiffstore('dest-key', 'key1', 'key2' [,'key3' ,...])   
  *     sinter      返回那些同事存在于所有集合中的元素(交集)               sinter('key1', 'key2'[, 'key3', ...])
  *     sinterstore 将sinter操作的结果存储到指定的键中                        sinterstore('dest-key', 'key1', 'key2' [,'key3' ,...])  
  *     sunion      返回那些至少存在于一个集合中的元素(并集)               sunion('key1', 'key2'[, 'key3', ...])
  *     sunionstore 将sunion操作的结果存储到指定的键中                        sunionstore('dest-key', 'key1', 'key2' [,'key3' ,...])  
  *
  * hash 散列
  *     命令                  行为                                              返回值                     使用示例(略去回调函数)
  *     hset            在散列里面关联起给定的键值对      1(新增)/0(更新) hset('hash-key', 'sub-key', 'value')    (不支持数组、字符串)
  *     hget            获取指定散列键的值                                                           hget('hash-key', 'sub-key')
  *     hgetall     获取散列包含的键值对                      json                        hgetall('hash-key')
  *     hdel            如果给定键存在于散列里面，则移除这个键                 hdel('hash-key', 'sub-key')
  *     hmset           为散列里面的一个或多个键设置值 OK                          hmset('hash-key', obj)
  *     hmget           从散列里面获取一个或多个键的值 array                       hmget('hash-key', array)
  *     hlen            返回散列包含的键值对数量                                                hlen('hash-key')
  *     hexists     检查给定键是否在散列中                 1/0                         hexists('hash-key', 'sub-key')
  *     hkeys           获取散列包含的所有键                      array                       hkeys('hash-key')
  *     hvals           获取散列包含的所有值                      array                       hvals('hash-key')
  *     hincrby     将存储的键值以指定增量增加           返回增长后的值 hincrby('hash-key', 'sub-key', increment) (注：假如当前value不为为字符串，则会无输出，程序停止在此处)
  *     hincrbyfloat    将存储的键值以指定浮点数增加
  *     
  *     
  * zset 有序集合
  *     命令                  行为                                              返回值                     使用示例(略去回调函数)
  *     zadd            将一个带有给定分支的成员添加到有序集合中                zadd('zset-key', score, 'key') (score为int)
  *     zrange      根据元素在有序排列中的位置，从中取出元素
  *     zrangebyscore   获取有序集合在给定分值范围内的所有元素
  *     zrem            如果给定成员存在于有序集合，则移除
  *     zcard           获取一个有序集合中的成员数量      有序集的元素个数    zcard('key')
  *
  */

  // redis其他常用命令汇总
  /*
     * keys命令组
     *  命令                  行为                                              返回值                     使用示例(略去回调函数)
     *  del             删除一个(或多个)keys           被删除的keys的数量     del('key1'[, 'key2', ...])
     *  exists      查询一个key是否存在                             1/0                     exists('key')
     *  expire      设置一个key的过期的秒数                       1/0                     expire('key', seconds)
     *  pexpire     设置一个key的过期的毫秒数                  1/0                     pexpire('key', milliseconds)    
     *  expireat    设置一个UNIX时间戳的过期时间            1/0                     expireat('key', timestamp)
     *  pexpireat   设置一个UNIX时间戳的过期时间(毫秒) 1/0                    pexpireat('key', milliseconds-timestamp)
     *  persist     移除key的过期时间                                  1/0                     persist('key')
     *  sort            对队列、集合、有序集合排序       排序完成的队列等  sort('key'[, pattern, limit offset count])
     *  
     *  flushdb     清空当前数据库
     *  
   */

co(function* () {
  //var set = yield redisCo.sadd('set-key', [item, item1, item2, item3, item4]);
  var json = {
    'sub-key5': 'value6',
    'sub-key7': 'value7'
  };
  var array = ['sub-key4', 'sub-key5'];
  //var hash = yield redisCo.hset('hash-key', 'sub-key4', 'value4');
    var hash = yield redisCo.hgetall('hash-key');
    console.log(hash);

  redisClient.quit();
});

// redis事务(支持连贯操作)
/*
 * 常用命令
 *  multi() 事务
 *  exec([callback]) 执行事务
 *  discard 放弃事务
 *  watch 监视指定的键值
 *  unwatch 取消监视
 * 
 * 命令用法：
 *  MULTI
 *      MULTI 命令用于开启一个事务，它总是返回 OK 。 
 *      MULTI 执行之后， 客户端可以继续向服务器发送任意多条命令， 
 *      这些命令不会立即被执行， 而是被放到一个队列中， 当 EXEC命令被调用时， 所有队列中的命令才会被执行。
 *      另一方面， 通过调用 DISCARD ， 客户端可以清空事务队列， 并放弃执行事务。
 *  EXEC
 *      EXEC 命令的回复是一个数组， 数组中的每个元素都是执行事务中的命令所产生的回复。 
 *      其中， 回复元素的先后顺序和命令发送的先后顺序一致。
 *  DISCARD
 *      当执行 DISCARD 命令时， 事务会被放弃， 事务队列会被清空， 并且客户端会从事务状态中退出
 *  WATCH
 *      WATCH 命令可以为 Redis 事务提供 check-and-set （CAS）行为。
 *      被 WATCH 的键会被监视，并会发觉这些键是否被改动过了。 
 *      如果有至少一个被监视的键在 EXEC 执行之前被修改了， 那么整个事务都会被取消， 
 *      EXEC 返回nil-reply来表示事务已经失败。
 *  
 *      WATCH 使得 EXEC 命令需要有条件地执行： 
 *      事务只能在所有被监视键都没有被修改的前提下执行， 如果这个前提不能满足的话，事务就不会被执行。
 *  
 *      WATCH 命令可以被调用多次。 对键的监视从 WATCH 执行之后开始生效， 直到调用 EXEC 为止。
 *
 *      当 EXEC 被调用时， 不管事务是否成功执行， 对所有键的监视都会被取消。
 *      另外， 当客户端断开连接时， 该客户端对键的监视也会被取消。
 *  UNWATCH
 *      使用无参数的 UNWATCH 命令可以手动取消对所有键的监视。
 *
 * 使用示例：
 *  1、连贯操作
 *      client.multi().incr('key').incr('key').exec(function (err, reply) {});
 *
 *  2、常规操作
 *      multi = client.multi();
 *      multi.incr('key');
 *      multi.incr('key');
 *      multi.exec(function (err, replies) {});
 *
 *  3、取巧操作
 *      client.multi([
 *          [&quot;mget&quot;, &quot;multifoo&quot;, &quot;multibar&quot;, redis.print],
 *          [&quot;incr&quot;, &quot;multifoo&quot;],
 *          [&quot;incr&quot;, &quot;multibar&quot;]
 *      ]).exec(function (err, replies) {
 *          console.log(replies);
 *      }); 
 *
 */

// 事件监听 
/*
 * 事件：ready、connect、reconnecting、end、warning、error
 * 执行顺序： ready &gt; connect &gt; end(quit触发)
 * error事件需要设置监听(必选)
 *
 * 使用示例：
 * redisClient.on(&quot;ready&quot;, function(err) {  
 *  if (err) return false;
 *  console.log(&quot;ready&quot;);
 * });
 */

redisClient.on(&quot;error&quot;, function (err) {
  console.log(&quot;Error &quot; + err);
});

// 数据操作(未用co-redis包装的写法)

// string(增、删、改、查)
/*redisClient.set('string key', 'string value', function (err, reply) {
    if (err) return false;
    console.log(reply);     // 设置成功,返回值为OK,数据更改直接更改对应的value即可，返回值也为OK。
});
redisClient.set('string key1', 'string value1', redis.print);       // 此种方式直接在命令行打印返回值。
redisClient.get('string key', function (err, reply) {
    if (err) return false;
    console.log(reply);     // 取值成功，返回指定键值对应的value,若键值不存在，返回null
});
redisClient.exists('string key2', function (err, reply) {
    if (err) return false;
    console.log(reply);     // 键存在，返回1，否则返回0
});
redisClient.del('string key1', function (err, reply) {
    if (err) return false;
    console.log(reply);     // 删除成功，返回1，否则返回0(对于不存在的键进行删除操作，同样返回0)
});
redisClient.randomkey(function (err, reply) {
    if (err) return false;
    console.log(reply);     // 随机返回一个键
});

redisClient.set('string key', 'string value', function(err, reply) {
    if (err) return false;
    console.log(reply);
});

redisClient.expire('string key', 1, function(err, reply) {
    if (err) return false;
    console.log(reply);
});

redisClient.get('string key', function (err, reply) {
    if (err) return false;
    console.log(reply);     // 取值成功，返回指定键值对应的value,若键值不存在，返回null
});

setTimeout(function () {
    redisClient.get('string key', function (err, reply) {
        if (err) console.log(err);
        console.log(reply);     // 取值成功，返回指定键值对应的value,若键值不存在，返回null
    });
}, 1100);*/

// list

// set 

// sorted set

// hash 

//redisClient.end(true);
//redisClient.quit();

exports.redisClient = function() {
    var redisClient = redis.createClient(redis_config);
    var redisCo = wrapper(redisClient);
    return redisCo;
};

exports.redisSave = function() {
    return co(function * () {
        var redisClient = exports.redisClient();

    }).catch(function(error) {
        log.error('models.redis.order.add(' + JSON.stringify(order) + ')', error);
    return false;
    });
};

exports.add = function(order) {
    return co(function * () {
    var result = yield exports.redisSave();
    return result;
  }).catch(function(error) {
    log.error('models.redis.order.add(' + JSON.stringify(order) + ')', error);
    return false;
  });
};</rich_text>
			</node>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="MVC" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1530180584.54" ts_lastsave="1530180601.15" unique_id="39">
			<rich_text></rich_text>
			<node custom_icon_id="0" foreground="" is_bold="False" name="MVC core Json 大小写格式" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1530180601.15" ts_lastsave="1530180719.61" unique_id="40">
				<rich_text foreground="#afaf5353e8e8">public IServiceProvider ConfigureServices(IServiceCollection services)
        {
            // MVC
            services.AddMvc()
　　　　　　  .AddJsonOptions(options =&gt;
            {
                //配置tojson格式配置 DefaultContractResolver 为和后台属性名保持一致（即：后台属性名为OrderName，前端js获得属性名也为OrderName）
                options.SerializerSettings.ContractResolver = new DefaultContractResolver();
                //修改为CamelCasePropertyNamesContractResolver，为js的驼峰格式，即abp默认格式（即：后台属性名为OrderName，前端js获得属性名为orderName）
                //options.SerializerSettings.ContractResolver = new CamelCasePropertyNamesContractResolver();
            });
}</rich_text>
			</node>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="IDEA" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1530691903.03" ts_lastsave="1530691919.56" unique_id="41">
			<rich_text></rich_text>
			<node custom_icon_id="0" foreground="" is_bold="False" name="食堂算法" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1530691919.56" ts_lastsave="1530691919.56" unique_id="42">
				<rich_text></rich_text>
			</node>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="tensorflow" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1530695462.96" ts_lastsave="1530695499.92" unique_id="43">
			<rich_text>
安装 


升级安装
pip install --upgrade --ignore-installed tensorflow
</rich_text>
			<node custom_icon_id="0" foreground="" is_bold="False" name="tensorflow编译" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1530695480.55" ts_lastsave="1530863608.97" unique_id="44">
				<rich_text>网上原文之一

1. Set up toolchain for for 64-bit: vcvarsall amd64
2. Invoked CMAKE
C:\Projects\tensorflow\tensorflow\contrib\cmake\build&gt;cmake .. -A x64 -DCMAKE_BUILD_TYPE=Release -DSWIG_EXECUTABLE=C:/tools/swigwin-3.0.12\swigwin-3.0.12/swig.exe -DPYTHON_EXECUTABLE=C:\Users\sergio.murillo\AppData\Local\Programs\Python\Python35/PYTHON.EXE -DPYTHON_LIBRARIES=C:\Users\sergio.murillo\AppData\Local\Programs\Python\Python35\libs\python35.lib -Dtensorflow_WIN_CPU_SIMD_OPTIONS=/arch:AVX
3. To build the PIP package
MSBuild /p:Configuration=Release /filelogger tf_python_build_pip_package.vcxproj
It build with no errors.
4. Install whl
pip install .\tf_python\dist\tensorflow-1.2.0rc0-cp35-cp35m-win_amd64.whl
5. Validate installation



// 编译命令样例1
C:\...\build2017&gt;cmake .. -A x64 -DCMAKE_BUILD_TYPE=Release
-DSWIG_EXECUTABLE=C:\work\swigwin-3.0.12\swig.exe
-DPYTHON_EXECUTABLE=&quot;C:\Users\jgu23\AppData\Local\Continuum\Anaconda3\python.exe&quot;
-DPYTHON_LIBRARIES=&quot;C:\Users\jgu23\AppData\Local\Continuum\Anaconda3\libs\python36.lib&quot;
-Dtensorflow_WIN_CPU_SIMD_OPTIONS=/arch:AVX2

// 编译命令样例2
C:\Projects\tensorflow\tensorflow\contrib\cmake\build&gt;cmake .. -A x64 -DCMAKE_BUILD_TYPE=Release -DSWIG_EXECUTABLE=C:/tools/swigwin-3.0.12\swigwin-3.0.12/swig.exe -DPYTHON_EXECUTABLE=C:\Users\sergio.murillo\AppData\Local\Programs\Python\Python35/PYTHON.EXE -DPYTHON_LIBRARIES=C:\Users\sergio.murillo\AppData\Local\Programs\Python\Python35\libs\python35.lib -Dtensorflow_WIN_CPU_SIMD_OPTIONS=/arch:AVX


// 编译命令样例3
cmake .. -A x64 -DCMAKE_BUILD_TYPE=Release -DSWIG_EXECUTABLE=C:/tools/swigwin-3.0.12\swigwin-3.0.12/swig.exe -DPYTHON_EXECUTABLE=C:\Users\sergio.murillo\AppData\Local\Programs\Python\Python35/PYTHON.EXE -DPYTHON_LIBRARIES=C:\Users\sergio.murillo\AppData\Local\Programs\Python\Python35\libs\python35.lib -Dtensorflow_WIN_CPU_SIMD_OPTIONS=/arch:AVX2

// 指令
-Dtensorflow_WIN_CPU_SIMD_OPTIONS=/arch:AVX
-DCMAKE_CXX_FLAGS=-msse4.2


适应本机的 样本1
\build2017&gt;
D:\cmake-3.11.4-win64-x64\bin\cmake.exe .. -A x64 -DCMAKE_BUILD_TYPE=Release
-DSWIG_EXECUTABLE=D:\swigwin-3.0.12\swig.exe
-DPYTHON_EXECUTABLE=&quot;D:\Python\Python.exe&quot;
-DPYTHON_LIBRARIES=&quot;D:\Python\libs\python37.lib&quot;
-Dtensorflow_WIN_CPU_SIMD_OPTIONS=/arch:AVX2
-DCMAKE_CXX_FLAGS=-msse4.2

// 此句ok
cmake .. -A x64 -DCMAKE_BUILD_TYPE=Release -DSWIG_EXECUTABLE=D:\swigwin-3.0.12\swig.exe -DPYTHON_EXECUTABLE=&quot;D:\Python\Python.exe&quot; -DPYTHON_LIBRARIES=&quot;D:\Python\libs\python37.lib&quot;  -DCMAKE_CXX_FLAGS=-msse4.2
// 此句卡在grpc 的git获取上
MSBuild /p:Configuration=Release /filelogger tf_python_build_pip_package.vcxproj


单独编译 protoBuf 

启动vs的命令提示符
&gt;cd ***\protoBuf\cmake
新建目录build,用于存放makefile文件。
注意，可编译为DEBUG版本和release版本，但是分别编译。
</rich_text>
				<rich_text background="#a5a52a2a2a2a" foreground="#ffffffff0000">d:\caffe\protobuf\cmake&gt;mkdir build &amp; cd build</rich_text>
				<rich_text>
如果编译debug版本
\protobuf\cmake\build&gt;mkdir debug &amp; cd debug
\protobuf\cmake\build\debug&gt;cmake -G &quot;NMake Makefiles&quot;  -DCMAKE_BUILD_TYPE=Debug  -Dprotobuf_BUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=../../../install ../..
如果编译release版本
\protobuf\cmake\build&gt;mkdir release &amp; cd release
\protobuf\cmake\build\release&gt;cmake -G &quot;NMake Makefiles&quot;  -DCMAKE_BUILD_TYPE=Release -Dprotobuf_BUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=../../../install ../..
仔细一比较两种模式，就能看出区别在哪了。
后面我就只以debug为例了，基本上是一样的操作
接下来最重要的一步，编译
d:\caffe\protobuf\cmake\build\debug&gt;nmake
很简单，直接输入nmake回车就可以了，然后慢慢等待。
编译完成后，进行安装
d:\caffe\protobuf\cmake\build\debug&gt;nmake install


问题：命令试图移除grpc目录然后重新git。
</rich_text>
				<rich_text justification="left"></rich_text>
				<rich_text>

</rich_text>
				<encoded_png char_offset="3352"></encoded_png>
			</node>
		</node>
	</node>
	<node custom_icon_id="0" foreground="" is_bold="False" name="PowerDesigner-C#模板生成修改" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1527242030.93" ts_lastsave="1527242523.57" unique_id="22">
		<rich_text>
---- 修改备注信息模板
C# 2::Profile\Shared\Templates\comment

----自动属性模板
C# 2::Profile\Attribute\Templates\definition
样例：[%visibility% ][%flags% ]%dataType% %fieldCode% { get; set; } [ = %InitialValue%]

----属性名大小写
C# 2::Profile\Attribute\Templates\Helpers\fieldCode
.//%normalizeFieldCode(Code)%  # 屏蔽此句
%Code%  # 改用此句</rich_text>
	</node>
	<node custom_icon_id="0" foreground="" is_bold="False" name="其他" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1525919578.32" ts_lastsave="1529635456.8" unique_id="13">
		<rich_text></rich_text>
		<node custom_icon_id="0" foreground="" is_bold="False" name="幼儿园费用" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1525919600.28" ts_lastsave="1525920088.93" unique_id="14">
			<rich_text>
田
18000

1500*6  + 1200*上学月份


1500*6+1200*10 = 18000+12000 = 30000

18000 + 30000 * 4 = 138000


告

1500*10*4 +16000 = 76000</rich_text>
		</node>
		<node custom_icon_id="0" foreground="" is_bold="False" name="za" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1529635456.81" ts_lastsave="1529635458.29" unique_id="38">
			<rich_text>前几日接到农商银行电话，说是我小孩的社保由该银行指定办理，让交小孩户口页缩印件。此事我一直未曾听说。社区方面也未曾打电话告知。这里想和街道办核实一下此事，是否有指定农商银行指定办理社保一事。我小孩户口在凉水井街道。2岁多。今年9月底满三岁。谢谢！</rich_text>
		</node>
	</node>
</cherrytree>
